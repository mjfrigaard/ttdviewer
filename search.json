[{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"app-structure","dir":"Articles","previous_headings":"","what":"App structure","title":"App","text":"application’s functions abstract syntax tree :","code":"█─launch  ├─█─app_ui  │ ├─█─mod_input_ui  │ ├─█─mod_list_ui  │ ├─█─mod_plot_ui  │ ├─█─mod_table_ui  │ ├─█─mod_report_input_ui  │ ├─█─mod_report_desc_ui  │ └─█─mod_report_download_ui  └─█─app_server    ├─█─mod_input_server    ├─█─mod_list_server    ├─█─mod_plot_server    ├─█─mod_table_server    ├─█─mod_report_input_server    ├─█─mod_report_desc_server    └─█─mod_report_download_server"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"variable-inputs","dir":"Articles","previous_headings":"App structure","what":"Variable inputs","title":"App","text":"variable input (input$dataset_title) collected mod_input_ui() mod_input_server() functions passed load_tt_data() function: mod_input_server() returns dataset list title reactive. app_server(), inputs assigned title_input separated selected_data dataset_title: reactive values passed output modules.","code":"tryCatch({     result <- load_tt_data(input$dataset_title)     if (length(result) == 0) {       logr_msg(\"Empty dataset returned\", level = \"WARN\")       showNotification(\"No data available for selected dataset\",         type = \"warning\", duration = 5       )     } else {       logr_msg(\"Dataset successfully loaded in reactive\",         level = \"SUCCESS\"       )     }     return(result)   },   error = function(e) {     logr_msg(paste(\"Error in data reactive:\", e$message),       level = \"ERROR\"     )     showNotification(paste(\"Error loading data:\", e$message),       type = \"error\", duration = 10     )     return(list())   } ) return(     list(       data = data,       'ds_title' = reactive(input$ds_title)     )   ) # initialize modules title_input <- mod_input_server(\"input\") # return the data and title selected_data <- title_input$data dataset_title <- title_input$ds_title"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"list","dir":"Articles","previous_headings":"","what":"List","title":"App","text":"mod_list simple module collects list #TidyTuesday datasets mod_input_server():","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"input-controls","dir":"Articles","previous_headings":"List","what":"Input Controls","title":"App","text":"","code":"# collect data mod_list_server(id = \"listviewerlite\", data = selected_data)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"list-display","dir":"Articles","previous_headings":"List","what":"List Display","title":"App","text":"list display comes listviewerlite package. mod_list_server() accepts selected_data data()","code":"# render data() output$list <- renderUI({   req(data())   listviewerlite::listview(data()) })"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"table","dir":"Articles","previous_headings":"","what":"Table","title":"App","text":"mod_table module Shiny module provides interactive data table functionality #TidyTuesday datasets using reactable package. module provides users powerful interface exploring tabular data built-search, sorting, pagination capabilities.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"input-controls-1","dir":"Articles","previous_headings":"Table","what":"Input Controls","title":"App","text":"UI function wrapped bslib::card(): server function observes selected data() list populates selector available datasets: observe waits data availability req(data()), extracts dataset names reactive data(), updates select input available choices, responds data() changes via bindEvent().","code":"bslib::card(   bslib::card_body(     selectInput(       inputId = ns(\"ds_input\"),       label = \"Dataset\",       choices = c(c(\"\", NULL)),       selected = \"\"     ),     markdown(\"The table display below is provided by [`reactable`](https://glin.github.io/reactable/):\"),     reactable::reactableOutput(ns(\"table\"))   ) ) observe({   req(data())   ds_names <- names(data())   updateSelectInput(     inputId = \"ds_input\",     choices = ds_names,      selected = ds_names[1]   ) }) |>   bindEvent(data())"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"table-display","dir":"Articles","previous_headings":"Table","what":"Table Display","title":"App","text":"display functionality lies rendering observer. pattern ensures table re-rendered whenever underlying data() changes, every reactive cycle. table rendered, several data processing steps: Confirmation data exists dataset input properly selected data() list selected data valid data frame Appropriate logging debugging monitoring","code":"observe({   req(data())   output$table <- reactable::renderReactable({     # Table generation logic   }) }) |>   bindEvent(data()) tryCatch({   req(data())   if (length(data()) == 0) {     logr_msg(       message = \"No data available for table rendering\",        level = \"WARN\")     return(NULL)   }      ds_list <- data()   ds_selected <- as.character(input$ds_input)   display_ds <- ds_list[[ds_selected]]      if (!is.data.frame(display_ds)) {     logr_msg(       message = \"First dataset is not a data frame\",        level = \"ERROR\")     return(NULL)   }   # code continues... })"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"large-datasets","dir":"Articles","previous_headings":"Table","what":"Large Datasets","title":"App","text":"Conditional logic handles large datasets: prevents performance issues limiting display 1000 rows large datasets Logging limitation user awareness. module creates informative subtitles based data context:","code":"display_ds <- if (nrow(display_ds) > 1000) {   logr_msg(     message = \"Large dataset detected - limiting to first 1000 rows\",      level = \"INFO\")   head(display_ds, 1000) } else {   display_ds } subtitle <- if (length(ds_list) > 1) {   paste(\"Showing:\", ds_selected, \"(\", length(ds_list), \"files total )\") } else {   paste(\"File:\", ds_selected) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"table-features","dir":"Articles","previous_headings":"Table","what":"Table Features","title":"App","text":"module leverages reactable’s extensive features enhanced user experience: configuration provides: Search functionality across columns Sortable columns Pagination (set 10 default) Column resizing Row highlighting Striped rows Bordered cells Custom header styling subtle background color Minimum column width text wrapping maintain clean layout Multiple page size options (5, 10, 20, 50 rows) Show page size selector user preference Resizable columns custom layouts","code":"reactable::reactable(   display_ds,   searchable = TRUE,   sortable = TRUE,   pagination = TRUE,   defaultPageSize = 10,   showPageSizeOptions = TRUE,   pageSizeOptions = c(5, 10, 20, 50),   highlight = TRUE,   bordered = TRUE,   striped = TRUE,   resizable = TRUE,   wrap = FALSE,   defaultColDef = reactable::colDef(     minWidth = 100,     headerStyle = list(background = \"#f7f7f8\")   ) )"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"error-handling","dir":"Articles","previous_headings":"Table","what":"Error Handling","title":"App","text":"UI includes comprehensive error handling: UI creation fails, users see graceful error message instead broken interface. server error handling logs errors debugging returns functional table error information. interactive features disabled error tables user-friendly error messages. mod_table creates user-friendly data table interface comprehensive error handling. reactable integration provides data exploration design makes easy include app_ui() app_server().","code":"tryCatch({   # UI creation code }, error = function(e) {   logr_msg(message = paste(\"Error creating table UI:\", e$message), level = \"ERROR\")   bslib::card(     bslib::card_header(\"Table Error\"),     bslib::card_body(       h4(\"Error loading table interface\", class = \"text-danger\")     )   ) }) tryCatch({   # Table rendering logic }, error = function(e) {   logr_msg(     message = paste(\"Error rendering table:\", e$message),      level = \"ERROR\")   reactable::reactable(     data.frame(Error = paste(\"Failed to load data:\", e$message)),     searchable = FALSE,     sortable = FALSE,     pagination = FALSE   ) })"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"graphs","dir":"Articles","previous_headings":"","what":"Graphs","title":"App","text":"graphs controlled mod_plot module, handles interactive data visualizations #TidyTuesday dataset list. module designed flexible interface exploring different types plots across multiple datasets : Unique namespace IDs reactive data handling flexible input processing Dynamic UI generation event-driven updates creating outputs based underlying data","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"input-controls-2","dir":"Articles","previous_headings":"Graphs","what":"Input Controls","title":"App","text":"UI creates two main input controls: dropdown allows users select dataset want visualize. choices populated dynamically based available datasets. checkbox group lets users select multiple plot types simultaneously. default selection includes three fundamental plots: column types, memory usage, missing values analysis. uiOutput creates dynamic container hold plot outputs generated user selections server-side logic. server function handles reactive static data inputs, ensuring module works whether receives reactive data (input module) static data passed directly. observer extracts dataset names reactive data (ttd_r()), provides fallback logic names missing (using indices). selectInput() updated available choices selects first dataset default. bindEvent(ttd_r(), = FALSE) ensures runs whenever data changes, every reactive cycle. renderUI creates plot containers dynamically validating input req(), mapping selected plot types purrr::map(). namespace function (NS()) creates unique plot id, also creates unique plot container headers specified dimensions.","code":"selectInput(   ns(\"dataset\"),   \"Choose dataset:\",   choices = NULL,   selected = NULL ) checkboxGroupInput(   ns(\"plots\"),   \"Select plot type:\",   choices = c(     \"types\"       = \"types\",     \"memory\"      = \"mem\",      \"missing\"     = \"na\",     \"correlation\" = \"cor\",     \"imbalance\"   = \"imb\",     \"numeric\"     = \"num\",     \"categorical\" = \"cat\"   ),   selected = c(\"types\",\"mem\",\"na\") ) uiOutput(ns(\"plots_ui\")) ttd_r <- if (is.reactive(ttd)) {   logr_msg(message = \"ttd is reactive\", level = \"DEBUG\")   ttd } else {   logr_msg(     message = \"ttd is static; wrapping in reactive()\",      level = \"DEBUG\")   reactive(ttd) } observe({   tryCatch({     ds <- names(ttd_r())     if (is.null(ds) || length(ds) == 0) {       ds <- seq_along(ttd_r()) %>% as.character()       logr_msg(message = \"No names in ttd; using indices\", level = \"WARN\")     }     updateSelectInput(       session, \"dataset\",       choices  = ds,       selected = ds[[1]]     )   }, error = function(err) {     logr_msg(       message = sprintf(\"Error populating dataset selector: %s\", err$message),        level = \"ERROR\")   }) }) |>   bindEvent(ttd_r(), once = FALSE) output$plots_ui <- renderUI({   tryCatch({     req(input$dataset, input$plots)     purrr::map(input$plots, function(plt) {       plot_id <- ns(paste0(\"plt_\", plt))       tagList(         h4(plt),         plotOutput(plot_id, height = \"300px\")       )     })   }, error = function(err) {     tagList(p(style = \"color:red;\", \"Failed to generate plot UI.\"))   }) })"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"plot-display","dir":"Articles","previous_headings":"Graphs","what":"Plot Display","title":"App","text":"complex part mod_plot handles plot generation. observer validates dataset selection exists reactive list (ttd_r()), extracts selected dataset standalone data frame (df). purrr::walk() iterates selected plot type creates individual plot outputs unique IDs using inspect_plot() function. bindEvent() limits unnecessary updates event-driven reactivity responding changes either dataset plot selections.","code":"observe({   tryCatch({     ds_list <- req(ttd_r())     sel_ds  <- input$dataset     req(sel_ds %in% names(ds_list))     df <- ds_list[[sel_ds]]          purrr::walk(input$plots, function(plt) {       out_id <- paste0(\"plt_\", plt)       output[[out_id]] <- renderPlot({         tryCatch({           inspect_plot(             ttd = setNames(list(df), sel_ds),             plots = plt           )         }, error = function(err2) {           plot.new()           text(0.5, 0.5, \"Error generating plot\", cex = 1.2, col = \"red\")         })       })     })   }, error = function(err) {     logr_msg(       message = sprintf(\"Error in plot observer: %s\", err$message),        level = \"ERROR\")   }) }) |>   bindEvent(list(input$dataset, input$plots), ignoreNULL = TRUE)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"inspect_plot","dir":"Articles","previous_headings":"Graphs > Plot Display","what":"inspect_plot()","title":"App","text":"module interfaces use inspect_plot() utility function, uses inspectdf package generate different types exploratory plots: “types”: Column type distributions “mem”: Memory usage analysis “na”: Missing value patterns “cor”: Correlation analysis “imb”: Feature imbalance categorical data “num”: Numeric column summaries “cat”: Categorical column summaries inspect_plot() function handles complexity determining appropriate visualizations based data characteristics number datasets. main app, module integrated : module receives data ttd parameter, can reactive expression another module static data passed directly. selected_data reactive containing #TidyTuesday datasets mod_input module, providing complete visualization interface within “Graphs” tab. input handling also makes module highly reusable across different contexts.","code":"# In app_ui() bslib::nav_panel(\"Graphs\", mod_plot_ui(\"viz\"))  # In app_server()   title_input <- mod_input_server(\"input\") selected_data <- title_input$data mod_plot_server(\"viz\", ttd = selected_data)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/app.html","id":"error-handling-1","dir":"Articles","previous_headings":"Graphs","what":"Error Handling","title":"App","text":"module implements comprehensive error handling multiple levels. Input validation handled using req() avoid processing invalid states. tryCatch() used graceful degradation fallback UI elements. logr_msg() function prints plot-level error handling different severity levels visual placeholders user-friendly error messages.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"tidytuesdayr","dir":"Articles","previous_headings":"TidyTuesday R packages","what":"tidytuesdayR","title":"Data","text":"tidytuesdayR package designed , “providing functions quickly import data posted Tidy Tuesday repository.” tt_load() function downloads data using date input. downloaded object list, additional attributes.","code":"library(tidytuesdayR) tt_data <- tt_load(\"2025-07-08\") #> ---- Compiling #TidyTuesday Information for 2025-07-08 ---- #> --- There are 3 files available --- #>  #>  #> ── Downloading files ─────────────────────────────────────────────────────────── #>  #>   1 of 3: \"answers.csv\" #>   2 of 3: \"color_ranks.csv\" #>   3 of 3: \"users.csv\" str(tt_data) #> List of 3 #>  $ answers    : spc_tbl_ [1,058,211 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>   ..$ user_id: num [1:1058211] 1 2 2 2 2 2 2 2 4 4 ... #>   ..$ hex    : chr [1:1058211] \"#8240EA\" \"#4B31EA\" \"#584601\" \"#DA239C\" ... #>   ..$ rank   : num [1:1058211] 1 3 5 4 1 2 3 3 1 2 ... #>   ..- attr(*, \"spec\")= #>   .. .. cols( #>   .. ..   user_id = col_double(), #>   .. ..   hex = col_character(), #>   .. ..   rank = col_double() #>   .. .. ) #>   ..- attr(*, \"problems\")=<externalptr>  #>  $ color_ranks: spc_tbl_ [949 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>   ..$ color: chr [1:949] \"purple\" \"green\" \"blue\" \"pink\" ... #>   ..$ rank : num [1:949] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ hex  : chr [1:949] \"#7e1e9c\" \"#15b01a\" \"#0343df\" \"#ff81c0\" ... #>   ..- attr(*, \"spec\")= #>   .. .. cols( #>   .. ..   color = col_character(), #>   .. ..   rank = col_double(), #>   .. ..   hex = col_character() #>   .. .. ) #>   ..- attr(*, \"problems\")=<externalptr>  #>  $ users      : spc_tbl_ [152,401 × 5] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>   ..$ user_id     : num [1:152401] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ monitor     : chr [1:152401] \"LCD\" \"LCD\" \"LCD\" \"LCD\" ... #>   ..$ y_chromosome: num [1:152401] 1 1 1 0 1 1 1 1 1 1 ... #>   ..$ colorblind  : num [1:152401] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ spam_prob   : num [1:152401] 0.00209 0.07458 0.0164 0.00156 0.00238 ... #>   ..- attr(*, \"spec\")= #>   .. .. cols( #>   .. ..   user_id = col_double(), #>   .. ..   monitor = col_character(), #>   .. ..   y_chromosome = col_double(), #>   .. ..   colorblind = col_double(), #>   .. ..   spam_prob = col_double() #>   .. .. ) #>   ..- attr(*, \"problems\")=<externalptr>  #>  - attr(*, \".tt\")= 'tt' chr [1:3] \"answers.csv\" \"color_ranks.csv\" \"users.csv\" #>   ..- attr(*, \".files\")='data.frame':    3 obs. of  3 variables: #>   .. ..$ data_files: chr [1:3] \"answers.csv\" \"color_ranks.csv\" \"users.csv\" #>   .. ..$ data_type : chr [1:3] \"csv\" \"csv\" \"csv\" #>   .. ..$ delim     : chr [1:3] \",\" \",\" \",\" #>   ..- attr(*, \".readme\")=List of 2 #>   .. ..$ node:<externalptr>  #>   .. ..$ doc :<externalptr>  #>   .. ..- attr(*, \"class\")= chr [1:2] \"xml_document\" \"xml_node\" #>   ..- attr(*, \".date\")= Date[1:1], format: \"2025-07-08\" #>  - attr(*, \"class\")= chr \"tt_data\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"class","dir":"Articles","previous_headings":"TidyTuesday R packages","what":"Class","title":"Data","text":"tt_data list ’s special class (\"tt_data\"). .tt attribute prints available datasets date. .tt attribute also lists available datasets, .files dataset file type delim, .readme (html), .date:","code":"attr(tt_data, \"class\") #> [1] \"tt_data\" attr(tt_data, \".tt\") #> Available datasets in this TidyTuesday: #>  answers.csv  #>  color_ranks.csv  #>  users.csv  #> str(attr(tt_data, \".tt\")) #>  'tt' chr [1:3] \"answers.csv\" \"color_ranks.csv\" \"users.csv\" #>  - attr(*, \".files\")='data.frame':   3 obs. of  3 variables: #>   ..$ data_files: chr [1:3] \"answers.csv\" \"color_ranks.csv\" \"users.csv\" #>   ..$ data_type : chr [1:3] \"csv\" \"csv\" \"csv\" #>   ..$ delim     : chr [1:3] \",\" \",\" \",\" #>  - attr(*, \".readme\")=List of 2 #>   ..$ node:<externalptr>  #>   ..$ doc :<externalptr>  #>   ..- attr(*, \"class\")= chr [1:2] \"xml_document\" \"xml_node\" #>  - attr(*, \".date\")= Date[1:1], format: \"2025-07-08\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"files","dir":"Articles","previous_headings":"TidyTuesday R packages > Class","what":".files","title":"Data","text":".tt","code":"attr(tt_data, \".tt\") |>    attr(\".files\") #>        data_files data_type delim #> 2     answers.csv       csv     , #> 3 color_ranks.csv       csv     , #> 4       users.csv       csv     ,"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"readme","dir":"Articles","previous_headings":"TidyTuesday R packages > Class","what":".readme","title":"Data","text":"","code":"attr(tt_data, \".tt\") |>    attr(\".readme\") #> {html_document} #> <html> #> [1] <body><div id=\"file\" class=\"md\" data-path=\"data/2025/2025-07-08/readme.md ..."},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"date","dir":"Articles","previous_headings":"TidyTuesday R packages > Class","what":".date","title":"Data","text":"","code":"attr(tt_data, \".tt\") |>    attr(\".date\") #> [1] \"2025-07-08\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"ttmeta","dir":"Articles","previous_headings":"TidyTuesday R packages","what":"ttmeta","title":"Data","text":"ttmeta package provides, “summary weekly TidyTuesday post, information articles data sources linked posts, details datasets , including variable names classes.”","code":"library(ttmeta) tt_meta <- get_tt_tbl(min_year = 2025L, max_year = this_year()) str(tt_meta) #> tt_tbl [28 × 8] (S3: tt_tbl/tbl_df/tbl/data.frame) #>  $ year         : int [1:28] 2025 2025 2025 2025 2025 2025 2025 2025 2025 2025 ... #>  $ week         : int [1:28] 1 2 3 4 5 6 7 8 9 10 ... #>  $ date         : Date[1:28], format: \"2025-01-07\" \"2025-01-14\" ... #>  $ title        : chr [1:28] \"Bring your own data from 2024!\" \"posit::conf talks\" \"The History of Himalayan Mountaineering Expeditions\" \"Water Insecurity\" ... #>  $ source_title : chr [1:28] \"NA\" \"posit::conf attendee portal 2023, posit::conf attendee portal 2024\" \"The Himalayan Database\" \"US Census Data from tidycensus\" ... #>  $ source_urls  :List of 28 #>   ..$ : chr(0)  #>   ..$ : chr [1:2] \"https://reg.conf.posit.co/flow/posit/positconf23/attendee-portal/page/sessioncatalog\" \"https://reg.conf.posit.co/flow/posit/positconf24/attendee-portal/page/sessioncatalog\" #>   ..$ : chr \"https://www.himalayandatabase.com/downloads.html\" #>   ..$ : chr \"https://cran.r-project.org/package=tidycensus\" #>   ..$ : chr \"https://www.kaggle.com/datasets/prashant111/the-simpsons-dataset\" #>   ..$ : chr \"https://archive.org/details/20250128-cdc-datasets\" #>   ..$ : chr \"https://cde.ucr.cjis.gov/LATEST/webapp/#/pages/docApi\" #>   ..$ : chr \"https://www.ajog.org/article/S0002-9378(24)00775-0/fulltext\" #>   ..$ : chr \"https://data.longbeach.gov/explore/dataset/animal-shelter-intakes-and-outcomes/information/\" #>   ..$ : chr \"https://erictleung.com/pixarfilms/index.html\" #>   ..$ : chr \"https://github.com/EmilHvitfeldt/palmtrees\" #>   ..$ : chr \"https://ir.aboutamazon.com/annual-reports-proxies-and-shareholder-letters/default.aspx\" #>   ..$ : chr \"https://github.com/williamorim/pokemon/\" #>   ..$ : chr \"https://data.cms.gov/provider-data/dataset/apyc-v239\" #>   ..$ : chr \"https://www.r-project.org/\" #>   ..$ : chr \"https://osf.io/qnrg6/\" #>   ..$ : chr \"https://user2025.r-project.org/\" #>   ..$ : chr \"https://grant-watch.us/nsf-data.html\" #>   ..$ : chr \"https://www.ingv.it/\" #>   ..$ : chr [1:2] \"https://www.beachwatch.nsw.gov.au/waterMonitoring/waterQualityData\" \"https://open-meteo.com/\" #>   ..$ : chr \"https://www.dndbeyond.com/srd\" #>   ..$ : chr \"https://docs.ropensci.org/gutenbergr/\" #>   ..$ : chr \"https://github.com/ropensci/historydata\" #>   ..$ : chr \"https://apis.guru\" #>   ..$ : chr \"https://immunizationdata.who.int/global?topic=Provisional-measles-and-rubella-data&location=\" #>   ..$ : chr \"https://www.eia.gov/dnav/pet/xls/PET_PRI_GND_DCUS_NUS_W.xls\" #>   ..$ : chr \"https://xkcd.com/color/colorsurvey.tar.gz\" #>   ..$ : chr \"https://docs.google.com/spreadsheets/d/1uxjiuWYZrALF2mthmiYbUPieu1dEdEwv9GB8dEAizso/edit?gid=0#gid=0\" #>  $ article_title: chr [1:28] \"NA\" \"posit::conf(2025) in-person registration is now open!\" \"The Expedition Archives of Elizabeth Hawley\" \"Mapping water insecurity in R with tidycensus\" ... #>  $ article_urls :List of 28 #>   ..$ : chr(0)  #>   ..$ : chr \"https://posit.co/blog/positconf2025-in-person-registration-is-now-open/\" #>   ..$ : chr \"https://www.himalayandatabase.com/index.html\" #>   ..$ : chr \"https://waterdata.usgs.gov/blog/acs-maps/\" #>   ..$ : chr \"https://toddwschneider.com/posts/the-simpsons-by-the-data/\" #>   ..$ : chr \"https://www.npr.org/sections/shots-health-news/2025/01/31/nx-s1-5282274/trump-administration-purges-health-websites\" #>   ..$ : chr \"https://le.fbi.gov/cjis-division/cjis-link/uniform-crime-reporting-program-still-vital-after-90-years-\" #>   ..$ : chr \"https://katcorr.github.io/this-art-is-HARD/\" #>   ..$ : chr \"https://www.longbeach.gov/press-releases/long-beach-animal-care-services-hits-highest-adoption-rate-ever-surpas\"| __truncated__ #>   ..$ : chr \"https://erictleung.com/pixarfilms/articles/pixar_film_ratings.html\" #>   ..$ : chr \"https://www.nature.com/articles/s41597-019-0189-0\" #>   ..$ : chr \"https://gregoryvdvinne.github.io/Text-Mining-Amazon-Budgets.html\" #>   ..$ : chr \"https://medium.com/@hanahshih46/pokemon-data-visualization-and-analysis-with-r-60970c8e37f4\" #>   ..$ : chr \"https://www.visualcapitalist.com/mapped-emergency-room-visit-times-by-state/\" #>   ..$ : chr \"https://zenodo.org/records/14902740\" #>   ..$ : chr \"https://osf.io/preprints/osf/tzcsy_v1\" #>   ..$ : chr \"https://user2025.r-project.org/\" #>   ..$ : chr \"https://www.nytimes.com/2025/04/22/science/trump-national-science-foundation-grants.html\" #>   ..$ : chr \"https://www.ingv.it/somma-vesuvio\" #>   ..$ : chr \"https://www.abc.net.au/news/2025-01-10/pollution-risks-in-sydney-beaches-contaminated-waterways-rain/104790856\" #>   ..$ : chr \"https://www.dndbeyond.com/posts/1949-you-can-now-publish-your-own-creations-using-the\" #>   ..$ : chr \"https://www.gutenberg.org/about/background/50years.html\" #>   ..$ : chr \"https://ropensci.org/blog/2023/02/07/what-does-it-mean-to-maintain-a-package/\" #>   ..$ : chr \"https://dslc-io.github.io/club-wapir/slides/intro.html\" #>   ..$ : chr \"https://abcnews.go.com/Health/measles-cases-reach-1046-us-infections-confirmed-30/story?id=122108194\" #>   ..$ : chr \"https://www.eia.gov/petroleum/gasdiesel/\" #>   ..$ : chr \"https://blog.xkcd.com/2010/05/03/color-survey-results/\" #>   ..$ : chr \"https://anjackson.net/2024/11/29/british-library-funding-breakdown-trends/#income-streams\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"github-urls","dir":"Articles","previous_headings":"","what":"GitHub URLs","title":"Data","text":"#TidyTuesday repository .csv file Week, Date, year, data_files, data_type, delim: file used create tt_github_urls data: tt_github_urls data comes .csv file TidyTuesday repo:","code":"tt_github_urls <- vroom::vroom(   file = \"https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/static/tt_data_type.csv\",   delim = \",\") |>   # create github_url column   dplyr::mutate(     github_url = glue::glue(       \"https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/{year}/{Date}/{data_files}\"     )   ) |>   # clean names   dplyr::rename(     week = Week,     date = Date   )  #> Rows: 769 Columns: 6 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (3): data_files, data_type, delim #> dbl  (2): Week, year #> date (1): Date #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. dplyr::glimpse(tt_github_urls) #> Rows: 769 #> Columns: 7 #> $ week       <dbl> 28, 27, 27, 27, 26, 25, 25, 24, 24, 24, 24, 24, 23, 23, 22,… #> $ date       <date> 2025-07-15, 2025-07-08, 2025-07-08, 2025-07-08, 2025-07-01… #> $ year       <dbl> 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,… #> $ data_files <chr> \"bl_funding.csv\", \"answers.csv\", \"color_ranks.csv\", \"users.… #> $ data_type  <chr> \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", \"cs… #> $ delim      <chr> \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\",… #> $ github_url <glue> \"https://raw.githubusercontent.com/rfordatascience/tidytue…"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"all-tidytuesday-data","dir":"Articles","previous_headings":"GitHub URLs","what":"All TidyTuesday Data","title":"Data","text":"all_tt_data.rda dataset contains years (2018 - current) ttmeta::get_tt_tbl() function. datasets contain following columns:","code":"dplyr::glimpse(all_tt_data) #> Rows: 378 #> Columns: 9 #> $ year          <int> 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20… #> $ week          <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1… #> $ date          <date> 2025-01-07, 2025-01-14, 2025-01-21, 2025-01-28, 2025-02… #> $ title         <chr> \"Bring your own data from 2024!\", \"posit::conf talks\", \"… #> $ clean_title   <chr> \"bring_your_own_data_from_2024\", \"posit_conf_talks\", \"th… #> $ source_title  <chr> \"NA\", \"posit::conf attendee portal 2023, posit::conf att… #> $ source_urls   <list> <>, <\"https://reg.conf.posit.co/flow/posit/positconf23/… #> $ article_title <chr> \"NA\", \"posit::conf(2025) in-person registration is now o… #> $ article_urls  <list> <>, \"https://posit.co/blog/positconf2025-in-person-regi…"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"all-tidytuesday-meta","dir":"Articles","previous_headings":"GitHub URLs","what":"All TidyTuesday Meta","title":"Data","text":"all_tt_meta.rda dataset contains years (2018 - current) ttmeta::load_tt_datasets_metadata(). dataset following columns:","code":"dplyr::glimpse(all_tt_meta) #> Rows: 765 #> Columns: 6 #> $ year             <int> 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,… #> $ week             <int> 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9,… #> $ dataset_name     <chr> NA, \"conf2023\", \"conf2024\", \"exped_tidy\", \"peaks_tidy… #> $ variables        <int> NA, 9, 5, 69, 29, 7, 7, 4, 14, 3, 13, 27, 6, 6, 10, 6… #> $ observations     <int> NA, 116, 106, 882, 480, 848, 854, 6722, 151, 4459, 31… #> $ variable_details <list> <NULL>, [<tbl_df[9 x 6]>], [<tbl_df[5 x 6]>], [<tbl_…"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"all-tidytuesday-variable-details","dir":"Articles","previous_headings":"GitHub URLs","what":"All TidyTuesday Variable Details","title":"Data","text":"all_tt_var_details.rda dataset contains following columns:","code":"dplyr::glimpse(all_tt_var_details) #> Rows: 8,958 #> Columns: 11 #> $ year         <int> 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 202… #> $ week         <int> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, … #> $ dataset_name <chr> \"conf2023\", \"conf2023\", \"conf2023\", \"conf2023\", \"conf2023… #> $ variables    <int> 9, 9, 9, 9, 9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 69, 69, 69, 69,… #> $ observations <int> 116, 116, 116, 116, 116, 116, 116, 116, 116, 106, 106, 10… #> $ variable     <chr> \"speaker_name\", \"speaker_affiliation\", \"session_type\", \"s… #> $ class        <chr> \"character\", \"character\", \"character\", \"character\", \"char… #> $ n_unique     <int> 115, 81, 3, 110, 28, 2, 39, 3, 110, 106, 105, 25, 102, 10… #> $ min          <list> \"Aaron Chafetz\", \"A Plus Associates, Posit PBC(Contracto… #> $ max          <list> \"Wyl Schuth\", \"Washington State Department of Agricultur… #> $ description  <chr> \"The name of the speaker. The data is indexed by this fie…"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"all-tidytuesday-combined","dir":"Articles","previous_headings":"GitHub URLs","what":"All TidyTuesday Combined","title":"Data","text":"all_tt_combined.rda dataset all_tt_meta left-joined all_tt_data year week. clean_title variable added create attribute can use join all_tt_var_details data.","code":"dplyr::glimpse(all_tt_combined) #> Rows: 24,450 #> Columns: 20 #> $ title         <chr> \"posit::conf talks\", \"posit::conf talks\", \"posit::conf t… #> $ clean_title   <chr> \"posit_conf_talks\", \"posit_conf_talks\", \"posit_conf_talk… #> $ dataset_name  <chr> \"conf2023\", \"conf2023\", \"conf2023\", \"conf2023\", \"conf202… #> $ year          <dbl> 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20… #> $ week          <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,… #> $ date          <date> 2025-01-14, 2025-01-14, 2025-01-14, 2025-01-14, 2025-01… #> $ variables     <int> 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 5,… #> $ observations  <int> 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 1… #> $ variable      <chr> \"speaker_name\", \"speaker_name\", \"speaker_affiliation\", \"… #> $ class         <chr> \"character\", \"character\", \"character\", \"character\", \"cha… #> $ n_unique      <int> 115, 115, 81, 81, 3, 3, 110, 110, 28, 28, 2, 2, 39, 39, … #> $ min           <list> \"Aaron Chafetz\", \"Aaron Chafetz\", \"A Plus Associates, P… #> $ max           <list> \"Wyl Schuth\", \"Wyl Schuth\", \"Washington State Departmen… #> $ description   <chr> \"The name of the speaker. The data is indexed by this fi… #> $ source_title  <chr> \"posit::conf attendee portal 2023, posit::conf attendee … #> $ article_title <chr> \"posit::conf(2025) in-person registration is now open!\",… #> $ data_files    <chr> \"conf2023.csv\", \"conf2024.csv\", \"conf2023.csv\", \"conf202… #> $ data_type     <chr> \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", \"csv\", … #> $ delim         <chr> \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \"… #> $ github_url    <glue> \"https://raw.githubusercontent.com/rfordatascience/tidy…"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"load_tt_data","dir":"Articles","previous_headings":"","what":"load_tt_data()","title":"Data","text":"load_tt_data() function uses title all_tt_combined return datasets GitHub repo.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"a-single-dataset","dir":"Articles","previous_headings":"load_tt_data()","what":"A single dataset","title":"Data","text":"tile contains single dataset, list returns ttd single element: clean_title attribute can used join dataset back all_tt_combined all_tt_data:","code":"ttd <- load_tt_data(\"Netflix Titles\") #> INFO [2025-07-16 14:18:02] Starting import for netflix_titles.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2021/2021-04-20/netflix_titles.csv #> SUCCESS [2025-07-16 14:18:02] Successfully loaded netflix_titles.csv ttd_nms <- names(ttd) ttd_nms #> [1] \"netflix_titles.csv\" attr(ttd[[\"netflix_titles.csv\"]], \"clean_title\") #> [1] \"netflix_titles\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"two-datasets","dir":"Articles","previous_headings":"load_tt_data()","what":"Two datasets","title":"Data","text":"ttd two datasets, can subset list name position:","code":"ttd2 <- load_tt_data(\"Space Launches\") #> INFO [2025-07-16 14:18:03] Starting import for agencies.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-01-15/agencies.csv #> SUCCESS [2025-07-16 14:18:03] Successfully loaded agencies.csv #> INFO [2025-07-16 14:18:03] Starting import for launches.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-01-15/launches.csv #> SUCCESS [2025-07-16 14:18:03] Successfully loaded launches.csv # store names  ttd2_nms <- names(ttd2) # check attr purrr::map(.x = ttd2, .f = attr, \"clean_title\") #> $agencies.csv #> [1] \"space_launches\" #>  #> $launches.csv #> [1] \"space_launches\" # check first dataset  dplyr::glimpse(ttd2[[ttd2_nms[1]]]) #> Rows: 74 #> Columns: 19 #> $ agency             <chr> \"RVSN\", \"UNKS\", \"NASA\", \"USAF\", \"AE\", \"AFSC\", \"VKSR… #> $ count              <dbl> 1528, 904, 469, 388, 258, 247, 200, 181, 128, 105, … #> $ ucode              <chr> \"RVSN\", \"GUKOS\", \"NASA\", \"USAF\", \"AE\", \"AFSC\", \"GUK… #> $ state_code         <chr> \"SU\", \"SU\", \"US\", \"US\", \"F\", \"US\", \"RU\", \"CN\", \"RU\"… #> $ type               <chr> \"O/LA\", \"O/LA\", \"O/LA/LV/PL/S\", \"O/LA/S\", \"O/LA\", \"… #> $ class              <chr> \"D\", \"D\", \"C\", \"D\", \"B\", \"D\", \"D\", \"C\", \"C\", \"B\", \"… #> $ tstart             <chr> \"1960\", \"1986 Apr 24\", \"1958 Oct  1\", \"1947 Sep 18\"… #> $ tstop              <chr> \"1991 Dec\", \"1991\", \"-\", \"-\", \"*\", \"1992 Jul  1\", \"… #> $ short_name         <chr> \"RVSN\", \"UNKS\", \"NASA\", \"USAF\", \"Arianespace\", \"AFS… #> $ name               <chr> \"Rakentiye Voiska Strategicheskogo Naznacheniye\", \"… #> $ location           <chr> \"Mosvka?\", \"Moskva\", \"Washington, D.C.\", \"Washingto… #> $ longitude          <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"… #> $ latitude           <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"… #> $ error              <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"… #> $ parent             <chr> \"-\", \"MO\", \"-\", \"-\", \"-\", \"USAF\", \"RVSN\", \"CASC\", \"… #> $ short_english_name <chr> \"-\", \"-\", \"-\", \"-\", \"Arianespace\", \"-\", \"-\", \"CALT\"… #> $ english_name       <chr> \"Strategic Rocket Forces\", \"-\", \"-\", \"-\", \"-\", \"-\",… #> $ unicode_name       <chr> \"Ракетные войска стратегического назначения\", \"Упра… #> $ agency_type        <chr> \"state\", \"state\", \"state\", \"state\", \"private\", \"sta… # check second dataset dplyr::glimpse(ttd2[[ttd2_nms[2]]]) #> Rows: 5,726 #> Columns: 11 #> $ tag         <chr> \"1967-065\", \"1967-080\", \"1967-096\", \"1968-042\", \"1968-092\"… #> $ JD          <dbl> 2439671, 2439726, 2439775, 2440000, 2440153, 2440426, 2440… #> $ launch_date <date> 1967-06-29, 1967-08-23, 1967-10-11, 1968-05-23, 1968-10-2… #> $ launch_year <dbl> 1967, 1967, 1967, 1968, 1968, 1969, 1970, 1970, 1971, 1971… #> $ type        <chr> \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor B… #> $ variant     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ mission     <chr> \"Secor Type II S/N 10\", \"DAPP 3419\", \"DAPP 4417\", \"DAPP 54… #> $ agency      <chr> \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\"… #> $ state_code  <chr> \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\"… #> $ category    <chr> \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\"… #> $ agency_type <chr> \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", \"sta…"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"three-datasets","dir":"Articles","previous_headings":"load_tt_data()","what":"Three datasets","title":"Data","text":"three datasets, can see names assigned element list:","code":"ttd3 <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:18:03] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:18:03] Successfully loaded cpu.csv #> INFO [2025-07-16 14:18:03] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:18:03] Successfully loaded gpu.csv #> INFO [2025-07-16 14:18:03] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:18:03] Successfully loaded ram.csv ttd3_nms <- names(ttd3) # attr purrr::map(.x = ttd3, .f = attr, \"clean_title\") #> $cpu.csv #> [1] \"moores_law\" #>  #> $gpu.csv #> [1] \"moores_law\" #>  #> $ram.csv #> [1] \"moores_law\" dplyr::glimpse(ttd3[[ttd3_nms[1]]]) #> Rows: 176 #> Columns: 6 #> $ processor            <chr> \"MP944 (20-bit, 6-chip)\", \"Intel 4004 (4-bit, 16-… #> $ transistor_count     <dbl> NA, 2250, 3500, 2500, 2800, 3000, 4100, 6000, 800… #> $ date_of_introduction <dbl> 1970, 1971, 1972, 1973, 1973, 1974, 1974, 1974, 1… #> $ designer             <chr> \"Garrett AiResearch\", \"Intel\", \"Intel\", \"NEC\", \"T… #> $ process              <dbl> NA, 10000, 10000, 7500, 6000, 10000, 6000, 6000, … #> $ area                 <dbl> NA, 12, 14, NA, 32, 12, 16, 20, 11, 21, NA, NA, 2… dplyr::glimpse(ttd3[[ttd3_nms[2]]]) #> Rows: 112 #> Columns: 8 #> $ processor            <chr> \"µPD7220 GDC\", \"ARTC HD63484\", \"YM7101 VDP\", \"Tom… #> $ transistor_count     <dbl> 4.0e+04, 6.0e+04, 1.0e+05, 7.5e+05, 1.0e+06, 1.0e… #> $ date_of_introduction <dbl> 1982, 1984, 1988, 1993, 1994, 1994, 1995, 1996, 1… #> $ designer_s           <chr> \"NEC\", \"Hitachi\", \"Sega\", \"Flare\", \"Sega\", \"Toshi… #> $ manufacturer_s       <chr> \"NEC\", \"Hitachi\", \"Yamaha\", \"IBM\", \"Hitachi\", \"LS… #> $ process              <dbl> 5000, NA, NA, NA, 500, 500, 500, 350, 350, 500, 5… #> $ area                 <dbl> NA, NA, NA, NA, NA, NA, 90, 81, NA, NA, NA, 90, 1… #> $ ref                  <chr> \"[107]\", \"[108]\", \"[109]\", \"[109]\", \"[110][111]\",… dplyr::glimpse(ttd3[[ttd3_nms[3]]]) #> Rows: 47 #> Columns: 10 #> $ chip_name            <chr> \"N/A\", \"N/A\", \"?\", \"SP95\", \"TMC3162\", \"?\", \"?\", \"… #> $ capacity_bits        <dbl> 1, 1, 8, 16, 16, NA, 256, 64, 144, 256, 1, 1, 1, … #> $ bit_units            <chr> \"Bits\", \"Bits\", \"Bits\", \"Bits\", \"Bits\", NA, \"Bits… #> $ ram_type             <chr> \"SRAM (cell)\", \"DRAM (cell)\", \"SRAM (bipolar)\", \"… #> $ transistor_count     <dbl> 6, 1, 48, 80, 96, NA, 256, 384, 864, 1536, 768, 3… #> $ date_of_introduction <dbl> 1963, 1965, 1965, 1965, 1966, 1966, 1968, 1968, 1… #> $ manufacturer_s       <chr> \"Fairchild\", \"Toshiba\", \"SDS, Signetics\", \"IBM\", … #> $ process              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, 12000, NA, 80… #> $ area                 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 10, N… #> $ ref                  <chr> \"[162]\", \"[163][164]\", \"[162]\", \"[165]\", \"[160]\",…"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"many-datasets","dir":"Articles","previous_headings":"load_tt_data()","what":"Many datasets","title":"Data","text":"two datasets, rules apply.","code":"ttd_many <- load_tt_data(\"LEGO database\") #> INFO [2025-07-16 14:18:03] Starting import for colors.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/colors.csv.gz #> SUCCESS [2025-07-16 14:18:03] Successfully loaded colors.csv.gz #> INFO [2025-07-16 14:18:03] Starting import for elements.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/elements.csv.gz #> SUCCESS [2025-07-16 14:18:03] Successfully loaded elements.csv.gz #> INFO [2025-07-16 14:18:03] Starting import for inventories.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventories.csv.gz #> SUCCESS [2025-07-16 14:18:04] Successfully loaded inventories.csv.gz #> INFO [2025-07-16 14:18:04] Starting import for inventory_minifigs.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventory_minifigs.csv.gz #> SUCCESS [2025-07-16 14:18:04] Successfully loaded inventory_minifigs.csv.gz #> INFO [2025-07-16 14:18:04] Starting import for inventory_parts.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventory_parts.csv.gz #> SUCCESS [2025-07-16 14:18:04] Successfully loaded inventory_parts.csv.gz #> INFO [2025-07-16 14:18:04] Starting import for inventory_sets.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventory_sets.csv.gz #> SUCCESS [2025-07-16 14:18:04] Successfully loaded inventory_sets.csv.gz #> INFO [2025-07-16 14:18:04] Starting import for minifigs.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/minifigs.csv.gz #> SUCCESS [2025-07-16 14:18:04] Successfully loaded minifigs.csv.gz #> INFO [2025-07-16 14:18:04] Starting import for part_categories.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/part_categories.csv.gz #> SUCCESS [2025-07-16 14:18:05] Successfully loaded part_categories.csv.gz #> INFO [2025-07-16 14:18:05] Starting import for part_relationships.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/part_relationships.csv.gz #> SUCCESS [2025-07-16 14:18:05] Successfully loaded part_relationships.csv.gz #> INFO [2025-07-16 14:18:05] Starting import for parts.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/parts.csv.gz #> SUCCESS [2025-07-16 14:18:05] Successfully loaded parts.csv.gz #> INFO [2025-07-16 14:18:05] Starting import for sets.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/sets.csv.gz #> SUCCESS [2025-07-16 14:18:05] Successfully loaded sets.csv.gz #> INFO [2025-07-16 14:18:05] Starting import for themes.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/themes.csv.gz #> SUCCESS [2025-07-16 14:18:05] Successfully loaded themes.csv.gz ttd_many_nms <- names(ttd_many) # check attr purrr::map(.x = ttd_many, .f = attr, \"clean_title\") #> $colors.csv.gz #> [1] \"lego_database\" #>  #> $elements.csv.gz #> [1] \"lego_database\" #>  #> $inventories.csv.gz #> [1] \"lego_database\" #>  #> $inventory_minifigs.csv.gz #> [1] \"lego_database\" #>  #> $inventory_parts.csv.gz #> [1] \"lego_database\" #>  #> $inventory_sets.csv.gz #> [1] \"lego_database\" #>  #> $minifigs.csv.gz #> [1] \"lego_database\" #>  #> $part_categories.csv.gz #> [1] \"lego_database\" #>  #> $part_relationships.csv.gz #> [1] \"lego_database\" #>  #> $parts.csv.gz #> [1] \"lego_database\" #>  #> $sets.csv.gz #> [1] \"lego_database\" #>  #> $themes.csv.gz #> [1] \"lego_database\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/data.html","id":"meta-data","dir":"Articles","previous_headings":"","what":"Meta data","title":"Data","text":"get_tt_title_meta() function returns info columns dataset ttd list. number numeric columns per dataset clean_title:","code":"ttd_meta <- get_tt_title_meta(ttd = ttd) #> INFO [2025-07-16 14:18:05] Datasets in list: netflix_titles.csv #> INFO [2025-07-16 14:18:05] Created metadata tibble with 14 rows covering 1 datasets ttd_meta #> # A tibble: 14 × 4 #>    clean_title    dataset            col          col_type  #>    <chr>          <chr>              <chr>        <chr>     #>  1 netflix_titles netflix_titles.csv release_year numeric   #>  2 netflix_titles netflix_titles.csv NA           logical   #>  3 netflix_titles netflix_titles.csv show_id      character #>  4 netflix_titles netflix_titles.csv type         character #>  5 netflix_titles netflix_titles.csv title        character #>  6 netflix_titles netflix_titles.csv director     character #>  7 netflix_titles netflix_titles.csv cast         character #>  8 netflix_titles netflix_titles.csv country      character #>  9 netflix_titles netflix_titles.csv date_added   character #> 10 netflix_titles netflix_titles.csv rating       character #> 11 netflix_titles netflix_titles.csv duration     character #> 12 netflix_titles netflix_titles.csv listed_in    character #> 13 netflix_titles netflix_titles.csv description  character #> 14 netflix_titles netflix_titles.csv NA           list ttd_meta |>   dplyr::filter(col_type == \"character\") |>   dplyr::count(clean_title, dataset, col_type, name = \"chr_cols\") |>   dplyr::arrange(desc(chr_cols)) #> # A tibble: 1 × 4 #>   clean_title    dataset            col_type  chr_cols #>   <chr>          <chr>              <chr>        <int> #> 1 netflix_titles netflix_titles.csv character       11 ttd2_meta <- get_tt_title_meta(ttd = ttd2) #> INFO [2025-07-16 14:18:05] Datasets in list: agencies.csv, launches.csv #> INFO [2025-07-16 14:18:05] Created metadata tibble with 33 rows covering 2 datasets head(ttd2_meta) #> # A tibble: 6 × 4 #>   clean_title    dataset      col        col_type  #>   <chr>          <chr>        <chr>      <chr>     #> 1 space_launches agencies.csv count      numeric   #> 2 space_launches agencies.csv NA         logical   #> 3 space_launches agencies.csv agency     character #> 4 space_launches agencies.csv ucode      character #> 5 space_launches agencies.csv state_code character #> 6 space_launches agencies.csv type       character ttd3_meta <- get_tt_title_meta(ttd = ttd3) #> INFO [2025-07-16 14:18:05] Datasets in list: cpu.csv, gpu.csv, ram.csv #> INFO [2025-07-16 14:18:05] Created metadata tibble with 30 rows covering 3 datasets head(ttd3_meta) #> # A tibble: 6 × 4 #>   clean_title dataset col                  col_type  #>   <chr>       <chr>   <chr>                <chr>     #> 1 moores_law  cpu.csv transistor_count     numeric   #> 2 moores_law  cpu.csv date_of_introduction numeric   #> 3 moores_law  cpu.csv process              numeric   #> 4 moores_law  cpu.csv area                 numeric   #> 5 moores_law  cpu.csv NA                   logical   #> 6 moores_law  cpu.csv processor            character ttd_many_meta <- get_tt_title_meta(ttd = ttd_many) #> INFO [2025-07-16 14:18:05] Datasets in list: colors.csv.gz, elements.csv.gz, inventories.csv.gz, inventory_minifigs.csv.gz, inventory_parts.csv.gz, inventory_sets.csv.gz, minifigs.csv.gz, part_categories.csv.gz, part_relationships.csv.gz, parts.csv.gz, sets.csv.gz, themes.csv.gz #> INFO [2025-07-16 14:18:05] Created metadata tibble with 67 rows covering 12 datasets head(ttd_many_meta) #> # A tibble: 6 × 4 #>   clean_title   dataset         col        col_type  #>   <chr>         <chr>           <chr>      <chr>     #> 1 lego_database colors.csv.gz   id         numeric   #> 2 lego_database colors.csv.gz   is_trans   logical   #> 3 lego_database colors.csv.gz   name       character #> 4 lego_database colors.csv.gz   rgb        character #> 5 lego_database colors.csv.gz   NA         list      #> 6 lego_database elements.csv.gz element_id numeric ttd_many_meta |>   dplyr::filter(col_type == \"numeric\") |>   dplyr::count(clean_title, dataset, col_type, name = \"num_cols\") |>   dplyr::arrange(desc(num_cols)) #> # A tibble: 12 × 4 #>    clean_title   dataset                   col_type num_cols #>    <chr>         <chr>                     <chr>       <int> #>  1 lego_database inventory_parts.csv.gz    numeric         3 #>  2 lego_database sets.csv.gz               numeric         3 #>  3 lego_database elements.csv.gz           numeric         2 #>  4 lego_database inventories.csv.gz        numeric         2 #>  5 lego_database inventory_minifigs.csv.gz numeric         2 #>  6 lego_database inventory_sets.csv.gz     numeric         2 #>  7 lego_database themes.csv.gz             numeric         2 #>  8 lego_database colors.csv.gz             numeric         1 #>  9 lego_database minifigs.csv.gz           numeric         1 #> 10 lego_database part_categories.csv.gz    numeric         1 #> 11 lego_database part_relationships.csv.gz numeric         1 #> 12 lego_database parts.csv.gz              numeric         1"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Graphs","text":"’ll need data demonstrate inspect_plot() function works. ’ll use load_tt_data() function collect four lists data TidyTuesday repo. \"Netflix Titles\" single dataset:","code":"ttd <- load_tt_data(\"Netflix Titles\") #> INFO [2025-07-16 14:18:10] Starting import for netflix_titles.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2021/2021-04-20/netflix_titles.csv #> SUCCESS [2025-07-16 14:18:10] Successfully loaded netflix_titles.csv purrr::map(.x = ttd, .f = attr, \"clean_title\") #> $netflix_titles.csv #> [1] \"netflix_titles\" # for a list with two datasets, we'll use the `\"Space Launches\"` data ttd2 <- load_tt_data(\"Space Launches\") #> INFO [2025-07-16 14:18:10] Starting import for agencies.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-01-15/agencies.csv #> SUCCESS [2025-07-16 14:18:10] Successfully loaded agencies.csv #> INFO [2025-07-16 14:18:10] Starting import for launches.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-01-15/launches.csv #> SUCCESS [2025-07-16 14:18:10] Successfully loaded launches.csv purrr::map(.x = ttd2, .f = attr, \"clean_title\") #> $agencies.csv #> [1] \"space_launches\" #>  #> $launches.csv #> [1] \"space_launches\" # \"Moore's Law\" contains three datasets ttd3 <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:18:10] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:18:10] Successfully loaded cpu.csv #> INFO [2025-07-16 14:18:10] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:18:10] Successfully loaded gpu.csv #> INFO [2025-07-16 14:18:10] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:18:10] Successfully loaded ram.csv purrr::map(.x = ttd3, .f = attr, \"clean_title\") #> $cpu.csv #> [1] \"moores_law\" #>  #> $gpu.csv #> [1] \"moores_law\" #>  #> $ram.csv #> [1] \"moores_law\" # finally, we'll download the \"LEGO database\" data with 12 datasets into the # ttd_many list: ttd_many <- load_tt_data(\"LEGO database\") #> INFO [2025-07-16 14:18:10] Starting import for colors.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/colors.csv.gz #> SUCCESS [2025-07-16 14:18:10] Successfully loaded colors.csv.gz #> INFO [2025-07-16 14:18:10] Starting import for elements.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/elements.csv.gz #> SUCCESS [2025-07-16 14:18:10] Successfully loaded elements.csv.gz #> INFO [2025-07-16 14:18:10] Starting import for inventories.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventories.csv.gz #> SUCCESS [2025-07-16 14:18:10] Successfully loaded inventories.csv.gz #> INFO [2025-07-16 14:18:10] Starting import for inventory_minifigs.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventory_minifigs.csv.gz #> SUCCESS [2025-07-16 14:18:10] Successfully loaded inventory_minifigs.csv.gz #> INFO [2025-07-16 14:18:10] Starting import for inventory_parts.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventory_parts.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded inventory_parts.csv.gz #> INFO [2025-07-16 14:18:11] Starting import for inventory_sets.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/inventory_sets.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded inventory_sets.csv.gz #> INFO [2025-07-16 14:18:11] Starting import for minifigs.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/minifigs.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded minifigs.csv.gz #> INFO [2025-07-16 14:18:11] Starting import for part_categories.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/part_categories.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded part_categories.csv.gz #> INFO [2025-07-16 14:18:11] Starting import for part_relationships.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/part_relationships.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded part_relationships.csv.gz #> INFO [2025-07-16 14:18:11] Starting import for parts.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/parts.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded parts.csv.gz #> INFO [2025-07-16 14:18:11] Starting import for sets.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/sets.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded sets.csv.gz #> INFO [2025-07-16 14:18:11] Starting import for themes.csv.gz from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2022/2022-09-06/themes.csv.gz #> SUCCESS [2025-07-16 14:18:11] Successfully loaded themes.csv.gz purrr::map(.x = ttd_many, .f = attr, \"clean_title\") #> $colors.csv.gz #> [1] \"lego_database\" #>  #> $elements.csv.gz #> [1] \"lego_database\" #>  #> $inventories.csv.gz #> [1] \"lego_database\" #>  #> $inventory_minifigs.csv.gz #> [1] \"lego_database\" #>  #> $inventory_parts.csv.gz #> [1] \"lego_database\" #>  #> $inventory_sets.csv.gz #> [1] \"lego_database\" #>  #> $minifigs.csv.gz #> [1] \"lego_database\" #>  #> $part_categories.csv.gz #> [1] \"lego_database\" #>  #> $part_relationships.csv.gz #> [1] \"lego_database\" #>  #> $parts.csv.gz #> [1] \"lego_database\" #>  #> $sets.csv.gz #> [1] \"lego_database\" #>  #> $themes.csv.gz #> [1] \"lego_database\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"utility-functions","dir":"Articles","previous_headings":"","what":"Utility functions","title":"Graphs","text":"inspect_plot() function following utility functions:","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"check-length","dir":"Articles","previous_headings":"Utility functions","what":"Check length","title":"Graphs","text":"Check length ttd3 list ttd_length():","code":"ttd_length(ttd = ttd3) #> [1] 3"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"check-numeric-columns","dir":"Articles","previous_headings":"Utility functions","what":"Check numeric columns","title":"Graphs","text":"Check datasets numerical columns: , two ?","code":"check_ttd_num_cols(ttd = ttd3) #> $cpu.csv #> [1] \"transistor_count\"     \"date_of_introduction\" \"process\"              #> [4] \"area\"                 #>  #> $gpu.csv #> [1] \"transistor_count\"     \"date_of_introduction\" \"process\"              #> [4] \"area\"                 #>  #> $ram.csv #> [1] \"capacity_bits\"        \"transistor_count\"     \"date_of_introduction\" #> [4] \"process\"              \"area\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"check-categorical-columns","dir":"Articles","previous_headings":"Utility functions","what":"Check categorical columns","title":"Graphs","text":"Check datasets categorical (character) columns:","code":"check_ttd_cat_cols(ttd3) #> $cpu.csv #> [1] \"processor\" \"designer\"  #>  #> $gpu.csv #> [1] \"processor\"      \"designer_s\"     \"manufacturer_s\" \"ref\"            #>  #> $ram.csv #> [1] \"chip_name\"      \"bit_units\"      \"ram_type\"       \"manufacturer_s\" #> [5] \"ref\""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"check-list-columns","dir":"Articles","previous_headings":"Utility functions","what":"Check list columns","title":"Graphs","text":"Check list columns:","code":"check_ttd_list_cols(ttd3) #> $cpu.csv #> [1] 0 #>  #> $gpu.csv #> [1] 0 #>  #> $ram.csv #> [1] 0"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"check-logical-columns","dir":"Articles","previous_headings":"Utility functions","what":"Check logical columns","title":"Graphs","text":"Check logical columns:","code":"check_ttd_log_cols(ttd3) #> $cpu.csv #> [1] 0 #>  #> $gpu.csv #> [1] 0 #>  #> $ram.csv #> [1] 0"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"check-date-columns","dir":"Articles","previous_headings":"Utility functions","what":"Check date columns","title":"Graphs","text":"Check date columns:","code":"check_ttd_date_cols(ttd3) #> $cpu.csv #> [1] 0 #>  #> $gpu.csv #> [1] 0 #>  #> $ram.csv #> [1] 0"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"check_col_types","dir":"Articles","previous_headings":"Utility functions","what":"check_col_types()","title":"Graphs","text":"wrapped check_col_types() function: functions allow us collect following: Determine number datasets ttd list Determine name datasets ttd list Determine number numerical columns dataset ttd list Determine names intersecting numerical columns dataset ttd list Determine number categorical columns dataset ttd list Determine names intersecting categorical columns dataset ttd list Determine number logical columns dataset ttd list Determine number date columns dataset ttd list Determine names date columns dataset ttd list Determine number list columns dataset ttd list Determine names list columns dataset ttd list","code":"identical( # check the   x = length(check_col_types(ttd = ttd3, type = \"cat\")),   y = length(check_ttd_cat_cols(ttd3)) ) #> [1] TRUE identical(   x = length(check_col_types(ttd = ttd3, type = \"date\")),   y = length(check_ttd_date_cols(ttd3)) ) #> [1] TRUE identical(   x = length(check_col_types(ttd = ttd3, type = \"log\")),   y = length(check_ttd_log_cols(ttd3)) ) #> [1] TRUE identical(   x = length(check_col_types(ttd = ttd3, type = \"num\")),   y = length(check_ttd_num_cols(ttd3)) ) #> [1] TRUE"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"function-logic","dir":"Articles","previous_headings":"","what":"Function logic","title":"Graphs","text":"Using functions , write custom inspect_plot() function adhere following rules:","code":""},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-1","dir":"Articles","previous_headings":"Function logic > inspect_types()","what":"if (length(ttd) == 1)","title":"Graphs","text":"one dataset ttd:","code":"inspectdf::inspect_types(   df1 = ttd2[[1]],   df2 = NULL ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(ttd =      list(\"agencies.csv\" = ttd2[[1]]),    plots = \"types\") #> INFO [2025-07-16 14:18:12] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:12] Beginning plot type 'types' #> SUCCESS [2025-07-16 14:18:13] Completed plot type 'types' #> SUCCESS [2025-07-16 14:18:13] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-2","dir":"Articles","previous_headings":"Function logic > inspect_types()","what":"if (length(ttd) == 2)","title":"Graphs","text":"two datasets ttd: check intersecting columns columns intersect, store column names intersecting_columns use intersecting_columns subset ttd inspect_cat() function:","code":"if (length(intersect(names(ttd2[[1]]), names(ttd2[[2]]))) > 0) {   intersecting_columns <- intersect(   x = names(ttd2[[1]]),    y = names(ttd2[[2]])   ) } inspectdf::inspect_types(   df1 = ttd2[[1]][intersecting_columns],   df2 = ttd2[[2]][intersecting_columns], ) |>   inspectdf::show_plot(text_labels = TRUE)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-3","dir":"Articles","previous_headings":"Function logic > inspect_types()","what":"if (length(ttd) >= 3)","title":"Graphs","text":"two datasets ttd:","code":"inspectdf::inspect_types(   df1 = ttd3[[1]],   df2 = NULL ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"cpu.csv\" = ttd3[[1]]),   plots = \"types\"   ) #> INFO [2025-07-16 14:18:16] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:16] Beginning plot type 'types' #> SUCCESS [2025-07-16 14:18:16] Completed plot type 'types' #> SUCCESS [2025-07-16 14:18:16] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_types(   df1 = ttd3[[2]],   df2 = NULL ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"gpu.csv\" = ttd3[[2]]),    plots = \"types\"   ) #> INFO [2025-07-16 14:18:18] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:18] Beginning plot type 'types' #> SUCCESS [2025-07-16 14:18:19] Completed plot type 'types' #> SUCCESS [2025-07-16 14:18:19] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_types(   df1 = ttd3[[3]],   df2 = NULL ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"ram.csv\" = ttd3[[3]]),    plots = \"types\"   ) #> INFO [2025-07-16 14:18:21] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:21] Beginning plot type 'types' #> SUCCESS [2025-07-16 14:18:21] Completed plot type 'types' #> SUCCESS [2025-07-16 14:18:21] inspect_plot(): all requested plots finished #> NULL"},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-1-1","dir":"Articles","previous_headings":"Function logic > inspect_mem()","what":"if (length(ttd) == 1)","title":"Graphs","text":"one dataset ttd:","code":"inspectdf::inspect_mem(   df1 = ttd[[1]],   df2 = NULL) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"netflix_titles.csv\" = ttd[[1]]),    plots = \"mem\"   ) #> INFO [2025-07-16 14:18:23] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:23] Beginning plot type 'mem' #> SUCCESS [2025-07-16 14:18:23] Completed plot type 'mem' #> SUCCESS [2025-07-16 14:18:23] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-2-1","dir":"Articles","previous_headings":"Function logic > inspect_mem()","what":"if (length(ttd) == 2)","title":"Graphs","text":"two datasets ttd:","code":"inspectdf::inspect_mem(   df1 = ttd2[[1]],    df2 = ttd2[[2]]) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(     \"agencies.csv\" = ttd2[[1]],     \"launches.csv\" = ttd2[[2]]     ),    plots = \"mem\") #> INFO [2025-07-16 14:18:25] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:26] Beginning plot type 'mem' #> SUCCESS [2025-07-16 14:18:26] Completed plot type 'mem' #> SUCCESS [2025-07-16 14:18:26] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-3-1","dir":"Articles","previous_headings":"Function logic > inspect_mem()","what":"if (length(ttd) >= 3)","title":"Graphs","text":"two datasets ttd:","code":"inspectdf::inspect_mem(   df1 = ttd3[[1]],   df2 = NULL ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"cpu.csv\" = ttd3[[1]]),    plots = \"mem\"   ) #> INFO [2025-07-16 14:18:28] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:28] Beginning plot type 'mem' #> SUCCESS [2025-07-16 14:18:28] Completed plot type 'mem' #> SUCCESS [2025-07-16 14:18:28] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_mem(   df1 = ttd3[[2]],   df2 = NULL ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"gpu.csv\" = ttd3[[2]]),    plots = \"mem\"   ) #> INFO [2025-07-16 14:18:30] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:30] Beginning plot type 'mem' #> SUCCESS [2025-07-16 14:18:30] Completed plot type 'mem' #> SUCCESS [2025-07-16 14:18:30] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_mem(   df1 = ttd3[[3]],   df2 = NULL ) |>   inspectdf::show_plot(text_labels = TRUE) # ... for all datasets in ttd list inspect_plot(   ttd = list(\"ram.csv\" = ttd3[[3]]),    plots = \"mem\"   ) #> INFO [2025-07-16 14:18:32] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:32] Beginning plot type 'mem' #> SUCCESS [2025-07-16 14:18:32] Completed plot type 'mem' #> SUCCESS [2025-07-16 14:18:32] inspect_plot(): all requested plots finished #> NULL"},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-1-2","dir":"Articles","previous_headings":"Function logic > inspect_cor()","what":"if (length(ttd) == 1)","title":"Graphs","text":"one dataset ttd: Plot dataset least two numeric columns","code":"if (ttd_length(ttd2) == 2) { # check for two datasets   # check for two numerical columns in ttd[[1]]   if (length(check_ttd_num_cols(ttd = ttd2)[[1]]) == 2) {     # plot first dataset     inspectdf::inspect_cor(       df1 = ttd2[[1]],       df2 = NULL,       method = \"pearson\",       with_col = NULL,       alpha = 0.05     ) |>       inspectdf::show_plot(text_labels = TRUE)     # check for two numerical columns in ttd[[2]]   } else if (length(check_ttd_num_cols(ttd = ttd2)[[2]]) >= 2) {     # plot second dataset     inspectdf::inspect_cor(       df1 = ttd2[[2]],       df2 = NULL,       method = \"pearson\",       with_col = NULL,       alpha = 0.05     ) |>       inspectdf::show_plot(text_labels = TRUE)   } else {     logr_msg(\"Error\", level = \"INFO\")   } } inspect_plot(   ttd = list(     \"launches.csv\" = ttd2[[2]]     ),    plots = \"cor\"   ) #> INFO [2025-07-16 14:18:33] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:33] Beginning plot type 'cor' #> SUCCESS [2025-07-16 14:18:33] Completed plot type 'cor' #> SUCCESS [2025-07-16 14:18:33] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-2-2","dir":"Articles","previous_headings":"Function logic > inspect_cor()","what":"if (length(ttd) == 2)","title":"Graphs","text":"two datasets ttd: check least 1 numeric column dataset ttd list Run inspectdf::inspect_cor()least one numerical column dataset:","code":"check_col_types(ttd2, type = \"num\") #> $agencies.csv #> [1] \"count\" #>  #> $launches.csv #> [1] \"JD\"          \"launch_year\" check_col_types(ttd3, type = \"num\") #> $cpu.csv #> [1] \"transistor_count\"     \"date_of_introduction\" \"process\"              #> [4] \"area\"                 #>  #> $gpu.csv #> [1] \"transistor_count\"     \"date_of_introduction\" \"process\"              #> [4] \"area\"                 #>  #> $ram.csv #> [1] \"capacity_bits\"        \"transistor_count\"     \"date_of_introduction\" #> [4] \"process\"              \"area\" inspectdf::inspect_cor(   df1 = ttd3[[1]],   df2 = ttd3[[2]],   method = \"pearson\",   with_col = NULL,   alpha = 0.05 ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(     \"cpu.csv\" = ttd3[[1]],     \"gpu.csv\" = ttd3[[2]]   ),    plots = \"cor\"   ) #> INFO [2025-07-16 14:18:35] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:35] Beginning plot type 'cor' #> SUCCESS [2025-07-16 14:18:35] Completed plot type 'cor' #> SUCCESS [2025-07-16 14:18:35] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-3-2","dir":"Articles","previous_headings":"Function logic > inspect_cor()","what":"if (length(ttd) >= 3)","title":"Graphs","text":"two datasets ttd: check least 1 numeric column datasets ttd list: Run following datasets least two numerical columns.","code":"check_col_types(ttd3, type = \"num\") #> $cpu.csv #> [1] \"transistor_count\"     \"date_of_introduction\" \"process\"              #> [4] \"area\"                 #>  #> $gpu.csv #> [1] \"transistor_count\"     \"date_of_introduction\" \"process\"              #> [4] \"area\"                 #>  #> $ram.csv #> [1] \"capacity_bits\"        \"transistor_count\"     \"date_of_introduction\" #> [4] \"process\"              \"area\" inspectdf::inspect_cor(   df1 = ttd3[[1]],   df2 = NULL,   method = \"pearson\",   with_col = NULL,   alpha = 0.05 ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"cpu.csv\" = ttd3[[1]]),    plots = \"cor\") #> INFO [2025-07-16 14:18:37] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:37] Beginning plot type 'cor' #> SUCCESS [2025-07-16 14:18:37] Completed plot type 'cor' #> SUCCESS [2025-07-16 14:18:37] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_cor(   df1 = ttd3[[2]],   df2 = NULL,   method = \"pearson\",   with_col = NULL,   alpha = 0.05 ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"gpu.csv\" = ttd3[[2]]),    plots = \"cor\") #> INFO [2025-07-16 14:18:39] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:39] Beginning plot type 'cor' #> SUCCESS [2025-07-16 14:18:39] Completed plot type 'cor' #> SUCCESS [2025-07-16 14:18:39] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_cor(   df1 = ttd3[[3]],   df2 = NULL,   method = \"pearson\",   with_col = NULL,   alpha = 0.05 ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"ram.csv\" = ttd3[[3]]),    plots = \"cor\") #> INFO [2025-07-16 14:18:41] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:41] Beginning plot type 'cor' #> SUCCESS [2025-07-16 14:18:41] Completed plot type 'cor' #> SUCCESS [2025-07-16 14:18:41] inspect_plot(): all requested plots finished #> NULL # for all other dataset in the list"},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-1-3","dir":"Articles","previous_headings":"Function logic > inspect_imb()","what":"if (length(ttd) == 1)","title":"Graphs","text":"one dataset ttd:","code":"inspectdf::inspect_imb(   df1 = ttd[[1]],   df2 = NULL,   include_na = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"netflix_titles.csv\" = ttd[[1]]),    plots = \"imb\") #> INFO [2025-07-16 14:18:43] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:43] Beginning plot type 'imb' #> SUCCESS [2025-07-16 14:18:43] Completed plot type 'imb' #> SUCCESS [2025-07-16 14:18:43] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-2-3","dir":"Articles","previous_headings":"Function logic > inspect_imb()","what":"if (length(ttd) == 2)","title":"Graphs","text":"two datasets ttd:","code":"inspectdf::inspect_imb(   df1 = ttd2[[1]],   df2 = ttd2[[2]],   include_na = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(     \"agencies.csv\" = ttd2[[1]],     \"launches.csv\" = ttd2[[2]]     ),    plots = \"imb\") #> INFO [2025-07-16 14:18:45] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:45] Beginning plot type 'imb' #> SUCCESS [2025-07-16 14:18:46] Completed plot type 'imb' #> SUCCESS [2025-07-16 14:18:46] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-3-3","dir":"Articles","previous_headings":"Function logic > inspect_imb()","what":"if (length(ttd) >= 3)","title":"Graphs","text":"two datasets ttd:","code":"inspectdf::inspect_imb(   df1 = ttd3[[1]],   df2 = NULL,   include_na = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"cpu.csv\" = ttd3[[1]]),    plots = \"imb\") #> INFO [2025-07-16 14:18:47] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:47] Beginning plot type 'imb' #> SUCCESS [2025-07-16 14:18:48] Completed plot type 'imb' #> SUCCESS [2025-07-16 14:18:48] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_imb(   df1 = ttd3[[2]],   df2 = NULL,   include_na = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"gpu.csv\" = ttd3[[2]]),    plots = \"imb\") #> INFO [2025-07-16 14:18:49] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:49] Beginning plot type 'imb' #> SUCCESS [2025-07-16 14:18:50] Completed plot type 'imb' #> SUCCESS [2025-07-16 14:18:50] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_imb(   df1 = ttd3[[3]],   df2 = NULL,   include_na = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"ram.csv\" = ttd3[[3]]),    plots = \"imb\") #> INFO [2025-07-16 14:18:51] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:51] Beginning plot type 'imb' #> SUCCESS [2025-07-16 14:18:51] Completed plot type 'imb' #> SUCCESS [2025-07-16 14:18:51] inspect_plot(): all requested plots finished #> NULL # ... for all datasets in ttd list"},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-1-4","dir":"Articles","previous_headings":"Function logic > inspect_num()","what":"if (length(ttd) == 1)","title":"Graphs","text":"one dataset ttd: check least 1 numeric column dataset ttd list , run:  BUG: inspect_plot() doesn’t seem identify list dataset single numerical column. work list two numeric columns:","code":"check_ttd_num_cols(ttd2) #> $agencies.csv #> [1] \"count\" #>  #> $launches.csv #> [1] \"JD\"          \"launch_year\" inspectdf::inspect_num(   df1 = ttd2[[1]],   df2 = NULL,   breaks = 20,   include_int = TRUE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"agencies.csv\" = ttd2[[1]]),    plots = \"num\") #> INFO [2025-07-16 14:18:53] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:53] Beginning plot type 'num' #> SUCCESS [2025-07-16 14:18:53] Completed plot type 'num' #> SUCCESS [2025-07-16 14:18:53] inspect_plot(): all requested plots finished #> NULL inspect_plot(   ttd = list(\"launches.csv\" = ttd2[[2]]),    plots = \"num\") #> INFO [2025-07-16 14:18:53] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:53] Beginning plot type 'num' #> SUCCESS [2025-07-16 14:18:53] Completed plot type 'num' #> SUCCESS [2025-07-16 14:18:53] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-2-4","dir":"Articles","previous_headings":"Function logic > inspect_num()","what":"if (length(ttd) == 2)","title":"Graphs","text":"two datasets ttd: check least 1 numeric column two datasets ttd list , run:   one numeric column, run code dataset numeric column.","code":"inspectdf::inspect_num(   df1 = ttd2[[1]],   df2 = ttd2[[2]],   breaks = 20,   include_int = TRUE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(   \"agencies.csv\" = ttd2[[1]],   \"launches.csv\" = ttd2[[2]]),   plots = \"num\") #> INFO [2025-07-16 14:18:55] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:55] Beginning plot type 'num' #> SUCCESS [2025-07-16 14:18:56] Completed plot type 'num' #> SUCCESS [2025-07-16 14:18:56] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-3-4","dir":"Articles","previous_headings":"Function logic > inspect_num()","what":"if (length(ttd) >= 3)","title":"Graphs","text":"two datasets ttd:","code":"inspectdf::inspect_num(   df1 = ttd3[[1]],   df2 = NULL,   breaks = 20,   include_int = TRUE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"cpu.csv\" = ttd3[[1]]),    plots = \"num\") #> INFO [2025-07-16 14:18:58] inspect_plot(): starting analysis #> INFO [2025-07-16 14:18:58] Beginning plot type 'num' #> SUCCESS [2025-07-16 14:18:58] Completed plot type 'num' #> SUCCESS [2025-07-16 14:18:58] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_num(   df1 = ttd3[[2]],   df2 = NULL,   breaks = 20,   include_int = TRUE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"gpu.csv\" = ttd3[[2]]),    plots = \"num\") #> INFO [2025-07-16 14:19:00] inspect_plot(): starting analysis #> INFO [2025-07-16 14:19:00] Beginning plot type 'num' #> SUCCESS [2025-07-16 14:19:00] Completed plot type 'num' #> SUCCESS [2025-07-16 14:19:00] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_num(   df1 = ttd3[[3]],   df2 = NULL,   breaks = 20,   include_int = TRUE ) |>   inspectdf::show_plot(text_labels = TRUE) # ... for all datasets in ttd list inspect_plot(   ttd = list(\"ram.csv\" = ttd3[[3]]),    plots = \"num\") #> INFO [2025-07-16 14:19:02] inspect_plot(): starting analysis #> INFO [2025-07-16 14:19:02] Beginning plot type 'num' #> SUCCESS [2025-07-16 14:19:03] Completed plot type 'num' #> SUCCESS [2025-07-16 14:19:03] inspect_plot(): all requested plots finished #> NULL"},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-1-5","dir":"Articles","previous_headings":"Function logic > inspect_cat()","what":"if (length(ttd) == 1)","title":"Graphs","text":"one dataset ttd: , run:","code":"inspectdf::inspect_cat(   df1 = ttd[[1]],   df2 = NULL,   include_int = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"netflix_titles.csv\" = ttd[[1]]),    plots = \"cat\") #> INFO [2025-07-16 14:19:07] inspect_plot(): starting analysis #> INFO [2025-07-16 14:19:07] Beginning plot type 'cat' #> SUCCESS [2025-07-16 14:19:08] Completed plot type 'cat' #> SUCCESS [2025-07-16 14:19:08] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-2-5","dir":"Articles","previous_headings":"Function logic > inspect_cat()","what":"if (length(ttd) == 2)","title":"Graphs","text":"two datasets ttd: check intersecting columns two datasets ttd list TRUE, store intersecting_columns Use intersecting_columns subset dataset ttd list.   aren’t intersecting categorical columns, run following dataset categorical column ttd[[?]]:","code":"length(   intersect(     x = check_ttd_cat_cols(ttd2)[[1]],     y = check_ttd_cat_cols(ttd2)[[2]]   ) ) > 0 #> [1] TRUE intersecting_columns <- intersect(x = names(ttd2[[1]]), y = names(ttd2[[2]])) inspectdf::inspect_cat(   df1 = ttd2[[1]][intersecting_columns],   df2 = ttd2[[2]][intersecting_columns],   include_int = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(     \"agencies.csv\" = ttd2[[1]][intersecting_columns],     \"launches.csv\" = ttd2[[2]][intersecting_columns]     ),    plots = \"cat\") #> INFO [2025-07-16 14:19:11] inspect_plot(): starting analysis #> INFO [2025-07-16 14:19:11] Beginning plot type 'cat' #> SUCCESS [2025-07-16 14:19:11] Completed plot type 'cat' #> SUCCESS [2025-07-16 14:19:11] inspect_plot(): all requested plots finished #> NULL inspectdf::inspect_cat(   df1 = ttd[[1]],   df2 = NULL,   include_int = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"netflix_titles.csv\" = ttd[[1]]),    plots = \"cat\") #> INFO [2025-07-16 14:19:14] inspect_plot(): starting analysis #> INFO [2025-07-16 14:19:14] Beginning plot type 'cat' #> SUCCESS [2025-07-16 14:19:16] Completed plot type 'cat' #> SUCCESS [2025-07-16 14:19:16] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/graphs.html","id":"if-lengthttd-3-5","dir":"Articles","previous_headings":"Function logic > inspect_cat()","what":"if (length(ttd) >= 3)","title":"Graphs","text":"two datasets ttd:","code":"inspectdf::inspect_cat(   df1 = ttd_many[[1]],   df2 = NULL,   include_int = FALSE ) |>   inspectdf::show_plot(text_labels = TRUE) inspect_plot(   ttd = list(\"colors.csv.gz\" = ttd_many[[1]]),    plots = \"cat\") #> INFO [2025-07-16 14:19:18] inspect_plot(): starting analysis #> INFO [2025-07-16 14:19:18] Beginning plot type 'cat' #> SUCCESS [2025-07-16 14:19:18] Completed plot type 'cat' #> SUCCESS [2025-07-16 14:19:18] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/lists.html","id":"list-object","dir":"Articles","previous_headings":"","what":"List object","title":"Lists","text":"’ll define list two #TidyTuesday datasets store ttd2:","code":"ttd2 <- load_tt_data(\"Space Launches\") #> INFO [2025-07-16 14:19:23] Starting import for agencies.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-01-15/agencies.csv #> SUCCESS [2025-07-16 14:19:23] Successfully loaded agencies.csv #> INFO [2025-07-16 14:19:23] Starting import for launches.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-01-15/launches.csv #> SUCCESS [2025-07-16 14:19:23] Successfully loaded launches.csv"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/lists.html","id":"ctr","dir":"Articles","previous_headings":"List object","what":"ctr()","title":"Lists","text":"ctr() custom folder tree function made lobstr::tree():","code":"ctr <- function(x = as.list(), depth = 10L, length = 50L) {   lobstr::tree(x,     max_depth = depth,     max_length = length,     show_environments = FALSE,     show_attributes = FALSE,     hide_scalar_types = TRUE,     class_printer = crayon::blue,     remove_newlines = TRUE,     val_printer = crayon::green   ) } ctr(x = ttd2) <list> ├─agencies.csv: S3<spec_tbl_df/tbl_df/tbl/data.frame> │ ├─agency<chr [74]>: \"RVSN\", \"UNKS\", \"NASA\", \"USAF\", \"AE\", \"AFSC\", \"VKSR\", \"CALT\", \"FKA\", \"SAST\", ... │ ├─count<dbl [74]>: 1528, 904, 469, 388, 258, 247, 200, 181, 128, 105, ... │ ├─ucode<chr [74]>: \"RVSN\", \"GUKOS\", \"NASA\", \"USAF\", \"AE\", \"AFSC\", \"GUKOS\", \"CALT\", \"MOM\", \"SBA\", ... │ ├─state_code<chr [74]>: \"SU\", \"SU\", \"US\", \"US\", \"F\", \"US\", \"RU\", \"CN\", \"RU\", \"CN\", ... │ ├─type<chr [74]>: \"O/LA\", \"O/LA\", \"O/LA/LV/PL/S\", \"O/LA/S\", \"O/LA\", \"LA\", \"O/LA\", \"LA/LV/PL/E\", \"O/LA\", \"O/LA/LV/PL\", ... │ ├─class<chr [74]>: \"D\", \"D\", \"C\", \"D\", \"B\", \"D\", \"D\", \"C\", \"C\", \"B\", ... │ ├─tstart<chr [74]>: \"1960\", \"1986 Apr 24\", \"1958 Oct  1\", \"1947 Sep 18\", \"1980 Mar 26\", \"1961 Apr  1\", \"1997 Jul\", \"1957 Nov 11\", \"2004\", \"1993\", ... │ ├─tstop<chr [74]>: \"1991 Dec\", \"1991\", \"-\", \"-\", \"*\", \"1992 Jul  1\", \"2001 Jun  1\", \"-\", \"2016 Jan  1\", \"-\", ... │ ├─short_name<chr [74]>: \"RVSN\", \"UNKS\", \"NASA\", \"USAF\", \"Arianespace\", \"AFSC\", \"VKS RVSN\", \"CALT\", \"Roskosmos\", \"SAST\", ... │ ├─name<chr [74]>: \"Rakentiye Vo...\", \"Upravleniye...\", \"National Aer...\", \"United State...\", \"Arianespace,...\", \"US Air Force...\", \"Voenno-Kosmi...\", \"Zhongguo yun...\", \"Federal'noe...\", \"Shanghai han...\", ... │ ├─location<chr [74]>: \"Mosvka?\", \"Moskva\", \"Washington,...\", \"Washington,...\", \"Paris-Evry,...\", \"El Segundo,...\", \"Mosvka-Solne...\", \"Beijing-Nanyuan\", \"Moskva\", \"Shanghai-Min...\", ... │ ├─longitude<chr [74]>: \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", ... │ ├─latitude<chr [74]>: \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", ... │ ├─error<chr [74]>: \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", ... │ ├─parent<chr [74]>: \"-\", \"MO\", \"-\", \"-\", \"-\", \"USAF\", \"RVSN\", \"CASC\", \"-\", \"CASC\", ... │ ├─short_english_name<chr [74]>: \"-\", \"-\", \"-\", \"-\", \"Arianespace\", \"-\", \"-\", \"CALT\", \"-\", \"-\", ... │ ├─english_name<chr [74]>: \"Strategic Ro...\", \"-\", \"-\", \"-\", \"-\", \"-\", \"Russian Mili...\", \"Chinese Acad...\", \"Roskosmos\", \"Shanghai Aca...\", ... │ ├─unicode_name<chr [74]>: \"Ракетные вой...\", \"Управление н...\", \"National Aer...\", \"United State...\", \"Arianespace,...\", \"US Air Force...\", \"Военно-косми...\", \"中国运载火箭技术研究院\", \"Федеральное...\", \"上海航天技术研究院\", ... │ └─agency_type<chr [74]>: \"state\", \"state\", \"state\", \"state\", \"private\", \"state\", \"state\", \"state\", \"state\", \"state\", ... └─launches.csv: S3<spec_tbl_df/tbl_df/tbl/data.frame>   ├─tag<chr [5,726]>: \"1967-065\", \"1967-080\", \"1967-096\", \"1968-042\", \"1968-092\", \"1969-062\", \"1970-012\", \"1970-070\", \"1971-012\", \"1971-054\", ...   ├─JD<dbl [5,726]>: 2439671.38, 2439725.7, 2439774.83, 2439999.69, 2440152.69, 2440425.69, 2440628.86, 2440832.86, 2440999.66, 2441111.08, ...   ├─launch_date<dbl [5,726]>: 1967-06-29, 1967-08-23, 1967-10-11, 1968-05-23, 1968-10-23, 1969-07-23, 1970-02-11, 1970-09-03, 1971-02-17, 1971-06-08, ...   ├─launch_year<dbl [5,726]>: 1967, 1967, 1967, 1968, 1968, 1969, 1970, 1970, 1971, 1971, ...   ├─type<chr [5,726]>: \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", ...   ├─variant<chr [5,726]>: \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", ...   ├─mission<chr [5,726]>: \"Secor Type I...\", \"DAPP 3419\", \"DAPP 4417\", \"DAPP 5420\", \"DAPP 6422\", \"DAPP 7421\", \"DAPP Block 5...\", \"DAPP Block 5...\", \"DAPP Block 5...\", \"P70-1\", ...   ├─agency<chr [5,726]>: \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", ...   ├─state_code<chr [5,726]>: \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", ...   ├─category<chr [5,726]>: \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", ...   └─agency_type<chr [5,726]>: \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", ..."},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/lists.html","id":"listviewerlitelistview","dir":"Articles","previous_headings":"List object","what":"listviewerlite::listview()","title":"Lists","text":"listview() listviewerlite provides HTML collapsible object: agency <character [1:74]>  \"RVSN\", \"UNKS\", \"NASA\", \"USAF\", \"AE\", \"AFSC\", \"VKSR\", \"CALT\", … count <double [1:74]>  1528, 904, 469, 388, 258, 247, 200, 181, … ucode <character [1:74]>  \"RVSN\", \"GUKOS\", \"NASA\", \"USAF\", \"AE\", \"AFSC\", \"GUKOS\", \"CALT\", … state_code <character [1:74]>  \"SU\", \"SU\", \"US\", \"US\", \"F\", \"US\", \"RU\", \"CN\", … type <character [1:74]>  \"O/LA\", \"O/LA\", \"O/LA/LV/PL/S\", \"O/LA/S\", \"O/LA\", \"LA\", \"O/LA\", \"LA/LV/PL/E\", … class <character [1:74]>  \"D\", \"D\", \"C\", \"D\", \"B\", \"D\", \"D\", \"C\", … tstart <character [1:74]>  \"1960\", \"1986 Apr 24\", \"1958 Oct  1\", \"1947 Sep 18\", \"1980 Mar 26\", \"1961 Apr  1\", \"1997 Jul\", \"1957 Nov 11\", … tstop <character [1:74]>  \"1991 Dec\", \"1991\", \"-\", \"-\", \"*\", \"1992 Jul  1\", \"2001 Jun  1\", \"-\", … short_name <character [1:74]>  \"RVSN\", \"UNKS\", \"NASA\", \"USAF\", \"Arianespace\", \"AFSC\", \"VKS RVSN\", \"CALT\", … name <character [1:74]>  \"Rakentiye Voisk…\", \"Upravleniye Nac…\", \"National Aerona…\", \"United States …\", \"Arianespace, …\", \"US Air Force Sy…\", \"Voenno-Kosmiche…\", \"Zhongguo yunzai…\", … location <character [1:74]>  \"Mosvka?\", \"Moskva\", \"Washington, D.C.\", \"Washington, DC-…\", \"Paris-Evry, Fra…\", \"El Segundo, Cal…\", \"Mosvka-Solnechn…\", \"Beijing-Nanyuan\", … longitude <character [1:74]>  \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", … latitude <character [1:74]>  \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", … error <character [1:74]>  \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", … parent <character [1:74]>  \"-\", \"MO\", \"-\", \"-\", \"-\", \"USAF\", \"RVSN\", \"CASC\", … short_english_name <character [1:74]>  \"-\", \"-\", \"-\", \"-\", \"Arianespace\", \"-\", \"-\", \"CALT\", … english_name <character [1:74]>  \"Strategic Rocke…\", \"-\", \"-\", \"-\", \"-\", \"-\", \"Russian Militar…\", \"Chinese Academy…\", … unicode_name <character [1:74]>  \"Ракетные войска…\", \"Управление нача…\", \"National Aerona…\", \"United States …\", \"Arianespace, …\", \"US Air Force Sy…\", \"Военно-космичес…\", \"中国运载火箭技术研究院\", … agency_type <character [1:74]>  \"state\", \"state\", \"state\", \"state\", \"private\", \"state\", \"state\", \"state\", … tag <character [1:5726]>  \"1967-065\", \"1967-080\", \"1967-096\", \"1968-042\", \"1968-092\", \"1969-062\", \"1970-012\", \"1970-070\", … JD <double [1:5726]>  2439671.38, 2439725.7, 2439774.83, 2439999.69, 2440152.69, 2440425.69, 2440628.86, 2440832.86, … launch_date <double [1:5726]>  1967-06-29, 1967-08-23, 1967-10-11, 1968-05-23, 1968-10-23, 1969-07-23, 1970-02-11, 1970-09-03, … launch_year <double [1:5726]>  1967, 1967, 1967, 1968, 1968, 1969, 1970, 1970, … type <character [1:5726]>  \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", \"Thor Burner 2\", … variant <character [1:5726]>  NA, NA, NA, NA, NA, NA, NA, NA, … mission <character [1:5726]>  \"Secor Type II S…\", \"DAPP 3419\", \"DAPP 4417\", \"DAPP 5420\", \"DAPP 6422\", \"DAPP 7421\", \"DAPP Block 5A F…\", \"DAPP Block 5A F…\", … agency <character [1:5726]>  \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", … state_code <character [1:5726]>  \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", … category <character [1:5726]>  \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", … agency_type <character [1:5726]>  \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", \"state\", …","code":"listviewerlite::listview(x = ttd2)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/lists.html","id":"three-datasets","dir":"Articles","previous_headings":"List object","what":"Three datasets","title":"Lists","text":"create list three #TidyTuesday datasets store ttd3: processor <character [1:176]>  \"MP944 (20-bit,…\", \"Intel 4004 (4-b…\", \"Intel 8008 (8-b…\", \"NEC μCOM-4 (4-b…\", \"Toshiba TLCS-12…\", \"Intel 4040 (4-b…\", \"Motorola 6800 (…\", \"Intel 8080 (8-b…\", … transistor_count <double [1:176]>  NA, 2250, 3500, 2500, 2800, 3000, 4100, 6000, … date_of_introduction <double [1:176]>  1970, 1971, 1972, 1973, 1973, 1974, 1974, 1974, … designer <character [1:176]>  \"Garrett AiResea…\", \"Intel\", \"Intel\", \"NEC\", \"Toshiba\", \"Intel\", \"Motorola\", \"Intel\", … process <double [1:176]>  NA, 10000, 10000, 7500, 6000, 10000, 6000, 6000, … area <double [1:176]>  NA, 12, 14, NA, 32, 12, 16, 20, … processor <character [1:112]>  \"µPD7220 GDC\", \"ARTC HD63484\", \"YM7101 VDP\", \"Tom & Jerry\", \"VDP1\", \"Sony GPU\", \"NV1\", \"Reality Coproce…\", … transistor_count <double [1:112]>  40000, 60000, 1e+05, 750000, 1e+06, 1e+06, 1e+06, 2600000, … date_of_introduction <double [1:112]>  1982, 1984, 1988, 1993, 1994, 1994, 1995, 1996, … designer_s <character [1:112]>  \"NEC\", \"Hitachi\", \"Sega\", \"Flare\", \"Sega\", \"Toshiba\", \"Nvidia, Sega\", \"SGI\", … manufacturer_s <character [1:112]>  \"NEC\", \"Hitachi\", \"Yamaha\", \"IBM\", \"Hitachi\", \"LSI\", \"SGS\", \"NEC\", … process <double [1:112]>  5000, NA, NA, NA, 500, 500, 500, 350, … area <double [1:112]>  NA, NA, NA, NA, NA, NA, 90, 81, … ref <character [1:112]>  \"[107]\", \"[108]\", \"[109]\", \"[109]\", \"[110][111]\", \"[112][113][114]\", \"[110]\", \"[115]\", … chip_name <character [1:47]>  \"N/\", \"N/\", \"?\", \"SP95\", \"TMC3162\", \"?\", \"?\", \"?\", … capacity_bits <double [1:47]>  1, 1, 8, 16, 16, NA, 256, 64, … bit_units <character [1:47]>  \"Bits\", \"Bits\", \"Bits\", \"Bits\", \"Bits\", NA, \"Bits\", \"Bits\", … ram_type <character [1:47]>  \"SRAM (cell)\", \"DRAM (cell)\", \"SRAM (bipolar)\", \"SRAM (bipolar)\", \"SRAM (TTL)\", \"SRAM (MOS)\", \"DRAM (IC)\", \"SRAM (PMOS)\", … transistor_count <double [1:47]>  6, 1, 48, 80, 96, NA, 256, 384, … date_of_introduction <double [1:47]>  1963, 1965, 1965, 1965, 1966, 1966, 1968, 1968, … manufacturer_s <character [1:47]>  \"Fairchild\", \"Toshiba\", \"SDS, Signetics\", \"IBM\", \"Transitron\", \"NEC\", \"Fairchild\", \"Fairchild\", … process <double [1:47]>  NA, NA, NA, NA, NA, NA, NA, NA, … area <double [1:47]>  NA, NA, NA, NA, NA, NA, NA, NA, … ref <character [1:47]>  \"[162]\", \"[163][164]\", \"[162]\", \"[165]\", \"[160]\", \"[159]\", \"[160]\", \"[159]\", …","code":"ttd3 <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:19:23] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:19:23] Successfully loaded cpu.csv #> INFO [2025-07-16 14:19:23] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:19:23] Successfully loaded gpu.csv #> INFO [2025-07-16 14:19:23] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:19:23] Successfully loaded ram.csv ctr(x = ttd3) <list> ├─cpu.csv: S3<spec_tbl_df/tbl_df/tbl/data.frame> │ ├─processor<chr [176]>: \"MP944 (20-bi...\", \"Intel 4004 (...\", \"Intel 8008 (...\", \"NEC μCOM-4 (...\", \"Toshiba TLCS...\", \"Intel 4040 (...\", \"Motorola 680...\", \"Intel 8080 (...\", \"TMS 1000 (4-...\", \"MOS Technolo...\", ... │ ├─transistor_count<dbl [176]>: NA, 2250, 3500, 2500, 2800, 3000, 4100, 6000, 8000, 4528, ... │ ├─date_of_introduction<dbl [176]>: 1970, 1971, 1972, 1973, 1973, 1974, 1974, 1974, 1974, 1975, ... │ ├─designer<chr [176]>: \"Garrett AiRe...\", \"Intel\", \"Intel\", \"NEC\", \"Toshiba\", \"Intel\", \"Motorola\", \"Intel\", \"Texas Instru...\", \"MOS Technology\", ... │ ├─process<dbl [176]>: NA, 10000, 10000, 7500, 6000, 10000, 6000, 6000, 8000, 8000, ... │ └─area<dbl [176]>: NA, 12, 14, NA, 32, 12, 16, 20, 11, 21, ... ├─gpu.csv: S3<spec_tbl_df/tbl_df/tbl/data.frame> │ ├─processor<chr [112]>: \"µPD7220 GDC\", \"ARTC HD63484\", \"YM7101 VDP\", \"Tom & Jerry\", \"VDP1\", \"Sony GPU\", \"NV1\", \"Reality Copr...\", \"PowerVR\", \"Voodoo Graphics\", ... │ ├─transistor_count<dbl [112]>: 40000, 60000, 1e+05, 750000, 1e+06, 1e+06, 1e+06, 2600000, 1200000, 1e+06, ... │ ├─date_of_introduction<dbl [112]>: 1982, 1984, 1988, 1993, 1994, 1994, 1995, 1996, 1996, 1996, ... │ ├─designer_s<chr [112]>: \"NEC\", \"Hitachi\", \"Sega\", \"Flare\", \"Sega\", \"Toshiba\", \"Nvidia, Sega\", \"SGI\", \"VideoLogic\", \"3dfx\", ... │ ├─manufacturer_s<chr [112]>: \"NEC\", \"Hitachi\", \"Yamaha\", \"IBM\", \"Hitachi\", \"LSI\", \"SGS\", \"NEC\", \"NEC\", \"TSMC\", ... │ ├─process<dbl [112]>: 5000, NA, NA, NA, 500, 500, 500, 350, 350, 500, ... │ ├─area<dbl [112]>: NA, NA, NA, NA, NA, NA, 90, 81, NA, NA, ... │ └─ref<chr [112]>: \"[107]\", \"[108]\", \"[109]\", \"[109]\", \"[110][111]\", \"[112][113][114]\", \"[110]\", \"[115]\", \"[116]\", \"[117][118]\", ... └─ram.csv: S3<spec_tbl_df/tbl_df/tbl/data.frame>   ├─chip_name<chr [47]>: \"N/A\", \"N/A\", \"?\", \"SP95\", \"TMC3162\", \"?\", \"?\", \"?\", \"?\", \"1101\", ...   ├─capacity_bits<dbl [47]>: 1, 1, 8, 16, 16, NA, 256, 64, 144, 256, ...   ├─bit_units<chr [47]>: \"Bits\", \"Bits\", \"Bits\", \"Bits\", \"Bits\", \"NA\", \"Bits\", \"Bits\", \"Bits\", \"Bits\", ...   ├─ram_type<chr [47]>: \"SRAM (cell)\", \"DRAM (cell)\", \"SRAM (bipolar)\", \"SRAM (bipolar)\", \"SRAM (TTL)\", \"SRAM (MOS)\", \"DRAM (IC)\", \"SRAM (PMOS)\", \"SRAM (NMOS)\", \"SRAM (PMOS)\", ...   ├─transistor_count<dbl [47]>: 6, 1, 48, 80, 96, NA, 256, 384, 864, 1536, ...   ├─date_of_introduction<dbl [47]>: 1963, 1965, 1965, 1965, 1966, 1966, 1968, 1968, 1968, 1969, ...   ├─manufacturer_s<chr [47]>: \"Fairchild\", \"Toshiba\", \"SDS, Signetics\", \"IBM\", \"Transitron\", \"NEC\", \"Fairchild\", \"Fairchild\", \"NEC\", \"Intel\", ...   ├─process<dbl [47]>: NA, NA, NA, NA, NA, NA, NA, NA, NA, 12000, ...   ├─area<dbl [47]>: NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ...   └─ref<chr [47]>: \"[162]\", \"[163][164]\", \"[162]\", \"[165]\", \"[160]\", \"[159]\", \"[160]\", \"[159]\", \"[159]\", \"[166][167][168]\", ... listviewerlite::listview(ttd3)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"module-architecture","dir":"Articles","previous_headings":"","what":"Module Architecture","title":"Reports","text":"report generation system consists three main components: mod_report_input: Format selection interface mod_report_desc: Dynamic format description system status mod_report_download: Report generation download functionality three modules work together handle multiple rendering formats, detect quarto installed system, handle errors gracefully.","code":"█─launch  ├─█─app_ui  │ ├─█─mod_report_input_ui  │ ├─█─mod_report_desc_ui  │ └─█─mod_report_download_ui  └─█─app_server    ├─█─mod_report_input_server    ├─█─mod_report_desc_server    └─█─mod_report_download_server"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"the-format-selector","dir":"Articles","previous_headings":"","what":"The Format Selector","title":"Reports","text":"mod_report_input handles format selection input user.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"ui","dir":"Articles","previous_headings":"The Format Selector","what":"UI","title":"Reports","text":"input module provides selectInput() interface two available format selections: \"R Markdown\" = \"rmarkdown\" \"Quarto\" = \"quarto\". input includes bold, user-friendly labels emphasizes functionality. default selected input (R Markdown) maximizes compatibility.","code":"selectInput(   inputId = ns(\"format\"),   label = strong(\"Download Report:\"),   choices = list(     \"R Markdown\" = \"rmarkdown\",     \"Quarto\" = \"quarto\"   ),   selected = \"rmarkdown\",   width = \"100%\" )"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"server","dir":"Articles","previous_headings":"The Format Selector","what":"Server","title":"Reports","text":"server demonstrates simple, clean reactive pattern: input$format returned directly via named list (instead internal state management). Debugging support provided comprehensive logging.","code":"mod_report_input_server <- function(id) {   moduleServer(id, function(input, output, session) {     return(       reactive(         list(\"format\" = input$format)       )     )   }) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"the-description-generator","dir":"Articles","previous_headings":"","what":"The Description Generator","title":"Reports","text":"","code":"█─launch  ├─█─app_ui  │ ├─█─mod_report_input_ui  │ └─█─mod_report_desc_ui  └─█─app_server    ├─█─mod_report_input_server    └─█─mod_report_desc_server      └─█─quarto_available"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"ui-1","dir":"Articles","previous_headings":"The Description Generator","what":"UI","title":"Reports","text":"description module uses complete dynamic UI generation: UI function minimal, delegates content generation server. gives us dynamic control presentation.","code":"mod_report_desc_ui <- function(id) {   ns <- NS(id)   tagList(     uiOutput(outputId = ns(\"desc\"))   ) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"server-1","dir":"Articles","previous_headings":"The Description Generator","what":"Server","title":"Reports","text":"server function contains logic quarto system detection adaptive messaging. reactive expression orchestrates multiple outputs: Checks system capability detection quarto_available() Format-specific messaging based selection Visual styling based system state quarto_status determined quarto_available() function, value stored available message: conditional checking behavior identifies Quarto selected provides graceful fallback messaging ’s unavailable system. description returns information rmarkdown quarto bootstrap icon visual identification, title, informative descriptions guide user choice, context-aware note reflect system state. UI, observer creates div()s Bootstrap classes styling, layout, typography. bindEvent() provides event-driven updates optimal performance.","code":"desc_inputs <- reactive({   req(format())   # System capability detection   # Format-specific descriptions     # Alert styling logic   return(list(     \"quarto_status\" = quarto_status,     \"description\" = description,     \"alert_class\" = alert_class   )) }) quarto_status <- if (format()$format == \"quarto\") {   if (quarto_available()) {     list(       available = TRUE,       message = \"Quarto is available and ready to use.\"     )   } else {     list(       available = FALSE,       message = \"Quarto not detected. Will fall back to R Markdown if selected.\"     )   } } else {   list(available = TRUE, message = \"Quarto is available and ready to use.\") } description <- switch(format()$format,   \"rmarkdown\" = list(     icon = \"bi-file-earmark-code\",     title = \"R Markdown\",     desc = \"Traditional R Markdown report. Compatible with all R installations.\",     note = \"Recommended for maximum compatibility.\"   ),   \"quarto\" = list(     icon = \"bi-file-earmark-richtext\",      title = \"Quarto\",     desc = \"Modern scientific publishing with enhanced features and interactivity.\",     note = quarto_status$message   ) ) observe({   output$desc <- renderUI({     tags$div(       class = paste(         \"alert border-start border-primary border-3 py-2\",         desc_inputs()$alert_class       ),       tags$div(         class = \"d-flex align-items-center mb-1\",         tags$i(class = paste(\"bi\", desc_inputs()$description$icon, \"me-2\")),         tags$strong(desc_inputs()$description$title)       ),       tags$p(desc_inputs()$description$desc, class = \"mb-1 small\"),       tags$small(desc_inputs()$description$note, class = \"text-muted\")     )   }) }) |>   bindEvent(format())"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"the-report-generator","dir":"Articles","previous_headings":"","what":"The Report Generator","title":"Reports","text":"","code":"█─launch  ├─█─app_ui  │ ├─█─mod_report_input_ui  │ └─█─mod_report_download_ui  └─█─app_server    ├─█─mod_report_input_server    └─█─mod_report_download_server      ├─█─quarto_available      ├─█─inspect_plot      ├─█─render_report      └─█─create_error_report"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"ui-2","dir":"Articles","previous_headings":"The Report Generator","what":"UI","title":"Reports","text":"download module provides input downloadButton(), custom div() classes, informative help text describing report contents:","code":"mod_report_download_ui <- function(id) {   ns <- NS(id)   tagList(     tags$div(       class = \"d-grid\",       downloadButton(         ns(\"download_report\"),         \"Download Report\",         class = \"btn btn-primary\",         icon = icon(\"download\")       )     ),     tags$small(       class = \"text-muted\",       \"Report includes: data visualization, summary statistics, data preview, and variable information.\"     )   ) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"server-2","dir":"Articles","previous_headings":"The Report Generator","what":"Server","title":"Reports","text":"mod_report_download_server() function requires following arguments: format: reactive expression returning report format data: reactive expression returning dataset list selected_plot_type: reactive expression returning selected plot type dataset_title: reactive expression returning dataset title format returned mod_report_input_server() function, data dataset_title returned mod_input_server(), just need make adjustment mod_plot_server() returns selected input$dataset input$plots:","code":"return(       reactive({         list(           \"dataset\" = input$dataset,           \"plots\" = input$plots         )       })     ) |>       bindEvent(         list(           input$dataset,            input$plots           ),         ignoreNULL = TRUE)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"the-rendering-engine","dir":"Articles","previous_headings":"","what":"The Rendering Engine","title":"Reports","text":"download handler (downloadHandler()) can paired download UI function (downloadButton() downloadLink()). Every downloadHandler() includes filename content functions. filename portion handles file generation error handling. filename function generates data-driven file name based dataset content, timestamp inclusion version control, safe character handling cross-platform compatibility, graceful fallback error conditions. content portion includes data validation processing (format detection automatic fallback). structured params list passed template include dataset_title, title, data_list, plots, plot_type: progress notifications provide real-time user feedback multi-level error handling, graceful recovery, error report generation else fails.","code":"filename = function() {   tryCatch({     current_data <- data()     actual_title <- if (!is.null(current_data) && length(current_data) > 0) {       first_dataset_name <- names(current_data)[1]       if (!is.null(first_dataset_name) && first_dataset_name != \"\") {         gsub(\"\\\\.csv$\", \"\", first_dataset_name)       } else {         \"tidytuesday_dataset\"       }     } else {       \"tidytuesday_dataset\"     }          clean_title <- gsub(\"[^A-Za-z0-9_-]\", \"_\", actual_title)     timestamp <- format(Sys.time(), \"%Y%m%d_%H%M%S\")     format_suffix <- switch(input$report_format,       \"rmarkdown\" = \"rmd\",       \"quarto\" = \"qto\"     )          filename <- paste0(clean_title, \"_\", format_suffix, \"_\", timestamp, \".html\")     return(filename)   }, error = function(e) {     return(\"tidytuesday_report.html\")   }) } content = function(file) {   tryCatch({     # data validation     current_data <- data()     if (is.null(current_data) || length(current_data) == 0) {       stop(\"No data available. Please select a dataset first.\")     }          # format detection     if (input$report_format == \"quarto\") {       if (!quarto_available()) {         # fallback         actual_format <- \"rmarkdown\"         showNotification(\"Quarto not available. Generating R Markdown report instead.\",                          type = \"warning\", duration = 5)       } else {         actual_format <- \"quarto\"       }     } else {       actual_format <- input$report_format     }          # progress notification     showNotification(paste(\"Generating\", tools::toTitleCase(actual_format), \"report...\"),                     type = \"message\", duration = 8, id = \"report_progress\")          # parameter preparation     params <- list(       dataset_title = actual_dataset_title,       title = paste(\"TidyTuesday Report:\", actual_dataset_title),       data_list = current_data,       plots = plots,       plot_type = current_plot_type     )          # render      tryCatch({       render_report(format = actual_format, output_file = file, params = params)     }, error = function(render_error) {       if (actual_format == \"quarto\") {         render_report(format = \"rmarkdown\", output_file = file, params = params)         showNotification(\"Quarto failed, generated R Markdown report instead.\",                          type = \"warning\", duration = 5)       } else {         stop(render_error)       }     })   }, error = function(e) {     # fallback     create_error_report(file, e$message, actual_dataset_title %||% \"Unknown\", input$report_format)   }) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"rendering-reports","dir":"Articles","previous_headings":"The Rendering Engine","what":"Rendering Reports","title":"Reports","text":"architecture render_report() ’s supporting utility functions : core rendering function coordinates multiple rendering strategies: template_path passed get_template_path() (either R Markdown Quarto) , file doesn’t exist, template resolution handled create_fallback_template(). params passed validate_and_clean_params() ensure correct values passed report. Conditional logic handles specific format selected (either render_rmarkdown_report() render_quarto_report())","code":"█─render_report  ├─█─get_template_path  ├─█─create_fallback_template  │ ├─█─create_fallback_rmd_template  │ └─█─create_fallback_qmd_template  ├─█─validate_and_clean_params  ├─█─render_rmarkdown_report  └─█─render_quarto_report    ├─█─quarto_available    ├─█─validate_quarto_params    ├─█─render_quarto_system_call    └─█─render_quarto_alternative      └─█─convert_qmd_to_rmd render_report <- function(format = c(\"rmarkdown\", \"quarto\"), output_file, params = list(), template_path = NULL) {   format <- match.arg(format)      # resolution   if (is.null(template_path)) {     template_path <- get_template_path(format)   }      # validation with fallback    if (!file.exists(template_path)) {     template_path <- create_fallback_template(format)   }      # params validation and cleaning   params <- validate_and_clean_params(params)      # format-specific rendering   if (format == \"rmarkdown\") {     render_rmarkdown_report(template_path, output_file, params)   } else {     render_quarto_report(template_path, output_file, params)   } }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"r-markdown","dir":"Articles","previous_headings":"The Rendering Engine > Rendering Reports","what":"R Markdown","title":"Reports","text":"R Markdown rendering handled render_rmarkdown_report(), creates clean environment rendering adds required libraries:","code":"render_rmarkdown_report <- function(template_path, output_file, params) {      logr_msg(     message = \"Rendering R Markdown report\",      level = \"DEBUG\")      logr_msg(     message = paste(\"Output file:\", output_file),      level = \"DEBUG\")    # clean environment   render_env <- new.env(parent = globalenv())    # add libs/reqs   render_env$library <- library   render_env$require <- require    # log parameter details   logr_msg(     message = paste(\"Rendering with dataset_title:\", params$dataset_title),      level = \"DEBUG\")   logr_msg(     message = paste(\"Rendering with title:\", params$title),      level = \"DEBUG\")    rmarkdown::render(     input = template_path,     output_file = output_file,     params = params,     envir = render_env,     quiet = FALSE,      clean = TRUE   ) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"quarto","dir":"Articles","previous_headings":"The Rendering Engine > Rendering Reports","what":"Quarto","title":"Reports","text":"Quarto rendering handled render_quarto_report() second method fallback strategy (render_quarto_system_call()): render_quarto_report() render report quarto R package installed, render_quarto_system_call() called command-line installations.","code":"render_quarto_report <- function(template_path, output_file, params) {   # method 1 using the quarto R package   if (requireNamespace(\"quarto\", quietly = TRUE)) {     quarto::quarto_render(       input = temp_qmd,       output_file = basename(output_file),       execute_params = params,       quiet = TRUE     )   } else {     # method 2 system call fallback     render_quarto_system_call(template_path, output_file, params)   } }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"error-handling-and-report","dir":"Articles","previous_headings":"The Rendering Engine > Rendering Reports","what":"Error Handling and Report","title":"Reports","text":"rendering functions attempts fail, system generates comprehensive error report:","code":"create_error_report <- function(file, error_msg, dataset_title = \"Unknown\", format = \"rmarkdown\") {   error_html <- paste0(     '<!DOCTYPE html>     <html>     <head>       <title>Report Generation Error<\/title>       <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">     <\/head>     <body>       <div class=\"error-container\">         <h1 class=\"text-danger\">Report Generation Failed<\/h1>         <div class=\"alert alert-danger\" role=\"alert\">           <h4 class=\"alert-heading\">Error Details<\/h4>           <p class=\"mb-0\">', error_msg, '<\/p>         <\/div>         <div class=\"alert alert-info mt-4\" role=\"alert\">           <h6 class=\"alert-heading\">Troubleshooting Tips<\/h6>           <ul class=\"mb-0\">             <li>Try selecting a different dataset<\/li>             <li>Try a different report format<\/li>             <li>Check your internet connection<\/li>             <li>Contact support if the problem persists<\/li>           <\/ul>         <\/div>       <\/div>     <\/body>     <\/html>'   )      writeLines(error_html, file) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"fallback-templates","dir":"Articles","previous_headings":"The Rendering Engine > Rendering Reports","what":"Fallback Templates","title":"Reports","text":"system includes automatic template generation templates missing: template system provides automatic template generation template file missing.","code":"create_fallback_template <- function(format = c(\"rmarkdown\", \"quarto\")) {   format <- match.arg(format)      if (format == \"rmarkdown\") {     return(create_fallback_rmd_template())   } else {     return(create_fallback_qmd_template())   } }"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"main-application-integration","dir":"Articles","previous_headings":"The Rendering Engine","what":"Main Application Integration","title":"Reports","text":"modules integrated app_ui() app_server() : functions placed clearly illustrate reactive data flow modules.","code":"# in app_ui() bslib::sidebar(   mod_input_ui(\"input\"),   mod_report_input_ui(\"rep_form\"),   br(),   mod_report_desc_ui(\"rep_desc\"),   mod_report_download_ui(\"rep_dwnld\") )  # in app_server() report_format <- mod_report_input_server(\"rep_form\")  mod_report_desc_server(\"rep_desc\", format = report_format)  mod_report_download_server(\"rep_dwnld\",    format = report_format,   data = selected_data,   selected_plot_type = selected_plots,   dataset_title = dataset_title )"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"module-features","dir":"Articles","previous_headings":"","what":"Module Features","title":"Reports","text":"Basic functionality works environments Advanced features available systems support Graceful fallbacks maintain functionality System detection results cached app sessions Template resolution cached performance Parameter validation cached repeated use DEBUG level development troubleshooting INFO level normal operation tracking WARN level recoverable issues ERROR level serious problems SUCCESS level confirmation completion Real-time feedback via notifications Clear progress indication generation Informative error messages actionable advice Consistent visual design throughout process System detection occurs needed Template loading deferred generation Parameter validation cached reuse Clean environments rendering isolation Resource cleanup generation Memory management large datasets System calls protected timeouts Rendering processes reasonable limits User feedback long-running operations Parameter sanitization user inputs Filename cleaning safe file operations Path validation template access Clean rendering environments security Restricted system access generation Temporary file management cleanup","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"utility-functions","dir":"Articles","previous_headings":"","what":"Utility functions","title":"Reports","text":"get_template_path() function return specified","code":"identical(   # response from function   x = get_template_path(\"rmarkdown\"),   # response from system.file()   y = system.file(\"rmarkdown\", \"report_template.Rmd\",     package = \"ttdviewer\"   ) ) identical(   # response from function   x = get_template_path(\"quarto\"),   # response from system.file()   y = system.file(\"quarto\", \"report_template.qmd\",     package = \"ttdviewer\"   ) ) rmd_temp <- create_fallback_template(format = \"rmarkdown\") basename(rmd_temp) qmd_temp <- create_fallback_template(format = \"quarto\") basename(qmd_temp)"},{"path":"https://mjfrigaard.github.io/ttdviewer/articles/reports.html","id":"quarto-detection","dir":"Articles","previous_headings":"Utility functions","what":"Quarto Detection","title":"Reports","text":"quarto_available() function implements comprehensive system detection:","code":"quarto_available <- function() {   # 1. Check for quarto R package   if (requireNamespace(\"quarto\", quietly = TRUE)) {     tryCatch({       quarto::quarto_version()       return(TRUE)     }, error = function(e) {       # Package exists but not functional     })   }      # 2. Check system PATH   result <- system2(\"quarto\", args = \"--version\", stdout = TRUE, stderr = TRUE, timeout = 5)   if (!is.null(result) && length(result) > 0) {     return(TRUE)   }      # 3. Check common installation paths   quarto_paths <- c(     \"/usr/local/bin/quarto\",     \"/usr/bin/quarto\",     \"C:/Program Files/Quarto/bin/quarto.exe\"   )      for (path in quarto_paths) {     if (file.exists(path)) {       return(TRUE)     }   }      return(FALSE) }"},{"path":"https://mjfrigaard.github.io/ttdviewer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Frigaard. Author, maintainer.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Frigaard M (2025). ttdviewer: Shiny App Downloadable TidyTuesday data R Markdown/Quarto reports.. R package version 0.1.0, https://mjfrigaard.github.io/ttdviewer/.","code":"@Manual{,   title = {ttdviewer: Shiny App with Downloadable TidyTuesday data and R Markdown/Quarto reports.},   author = {Martin Frigaard},   year = {2025},   note = {R package version 0.1.0},   url = {https://mjfrigaard.github.io/ttdviewer/}, }"},{"path":"https://mjfrigaard.github.io/ttdviewer/index.html","id":"the-tidytuesday-data-viewer","dir":"","previous_headings":"","what":"Shiny App with Downloadable TidyTuesday data and R Markdown/Quarto reports.","title":"Shiny App with Downloadable TidyTuesday data and R Markdown/Quarto reports.","text":"#TidyTuesday data viewer (ttdviewer) Shiny app-package1 viewing data #TidyTuesday project. package started small application demonstrate various examples downloadable reports (R Markdown, Quarto, etc.), ’s grown include additional features: data loaded directly GitHub (.e., help tidytuesdayR ttmeta packages). returned object visible list first nav_panel() via listviewerlite package. data visible table compliments reactable package second nav_panel(). Data visualizations inspectdf package ‘summarise missingness, categorical levels, numeric distribution, correlation, column types memory usage’ available third nav_panel().","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Shiny App with Downloadable TidyTuesday data and R Markdown/Quarto reports.","text":"can install development version ttdviewer GitHub :","code":"# install.packages(\"pak\") pak::pak(\"mjfrigaard/ttdviewer\")"},{"path":"https://mjfrigaard.github.io/ttdviewer/index.html","id":"launch-app","dir":"","previous_headings":"","what":"Launch app","title":"Shiny App with Downloadable TidyTuesday data and R Markdown/Quarto reports.","text":"Launch application using standalone app function :","code":"library(ttdviewer) launch()"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Application Server — app_server","title":"Application Server — app_server","text":"Application server logic","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application Server — app_server","text":"","code":"app_server(input, output, session)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Application Server — app_server","text":"input Shiny input object output Shiny output object session Shiny session object","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_server.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Application Server — app_server","text":"last edited: 2025-07-10-07.47.57","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Application UI — app_ui","title":"Application UI — app_ui","text":"Constructs user interface using bslib components.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application UI — app_ui","text":"","code":"app_ui()"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Application UI — app_ui","text":"UI definition Shiny app","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/app_ui.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Application UI — app_ui","text":"last edited: 2025-06-14-23.23.36","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Column Types in TidyTuesday Data — check_col_types","title":"Check Column Types in TidyTuesday Data — check_col_types","text":"wrapper function checks specific column types across datasets TidyTuesday data list.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Column Types in TidyTuesday Data — check_col_types","text":"","code":"check_col_types(ttd, type)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Column Types in TidyTuesday Data — check_col_types","text":"ttd list data frames load_tt_data() type Character string specifying column type check . Options : \"num\" \"numeric\" - numeric/integer columns \"cat\" \"character\" - character columns \"log\" \"logical\" - logical columns \"list\" - list columns \"date\" - date/datetime columns","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_col_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Column Types in TidyTuesday Data — check_col_types","text":"named list element contains column names specified type, 0 columns type exist dataset","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_col_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Column Types in TidyTuesday Data — check_col_types","text":"","code":"ttd <- load_tt_data(\"Moore's Law\") #> Error in load_tt_data(\"Moore's Law\"): No entries found for title: 'Moore's Law'  # Check for numeric columns check_col_types(ttd, \"num\") #> Error: object 'ttd' not found  # Check for character columns check_col_types(ttd, \"cat\") #> Error: object 'ttd' not found  # Check for logical columns check_col_types(ttd, \"log\") #> Error: object 'ttd' not found"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_cat_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Categorical (Character) Columns in TidyTuesday Data — check_ttd_cat_cols","title":"Check for Categorical (Character) Columns in TidyTuesday Data — check_ttd_cat_cols","text":"Checks datasets TidyTuesday data list character columns.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_cat_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Categorical (Character) Columns in TidyTuesday Data — check_ttd_cat_cols","text":"","code":"check_ttd_cat_cols(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_cat_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Categorical (Character) Columns in TidyTuesday Data — check_ttd_cat_cols","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_cat_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Categorical (Character) Columns in TidyTuesday Data — check_ttd_cat_cols","text":"named list element contains column names character type, 0 character columns exist dataset","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_date_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Date Columns in TidyTuesday Data — check_ttd_date_cols","title":"Check for Date Columns in TidyTuesday Data — check_ttd_date_cols","text":"Checks datasets TidyTuesday data list date/datetime columns.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_date_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Date Columns in TidyTuesday Data — check_ttd_date_cols","text":"","code":"check_ttd_date_cols(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_date_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Date Columns in TidyTuesday Data — check_ttd_date_cols","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_date_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Date Columns in TidyTuesday Data — check_ttd_date_cols","text":"named list element contains column names date/datetime type, 0 date columns exist dataset","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_list_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for List Columns in TidyTuesday Data — check_ttd_list_cols","title":"Check for List Columns in TidyTuesday Data — check_ttd_list_cols","text":"Checks datasets TidyTuesday data list list columns.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_list_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for List Columns in TidyTuesday Data — check_ttd_list_cols","text":"","code":"check_ttd_list_cols(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_list_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for List Columns in TidyTuesday Data — check_ttd_list_cols","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_list_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for List Columns in TidyTuesday Data — check_ttd_list_cols","text":"named list element contains column names list type, 0 list columns exist dataset","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_log_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Logical Columns in TidyTuesday Data — check_ttd_log_cols","title":"Check for Logical Columns in TidyTuesday Data — check_ttd_log_cols","text":"Checks datasets TidyTuesday data list logical columns.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_log_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Logical Columns in TidyTuesday Data — check_ttd_log_cols","text":"","code":"check_ttd_log_cols(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_log_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Logical Columns in TidyTuesday Data — check_ttd_log_cols","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_log_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Logical Columns in TidyTuesday Data — check_ttd_log_cols","text":"named list element contains column names logical type, 0 logical columns exist dataset","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_num_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Numeric Columns in TidyTuesday Data — check_ttd_num_cols","title":"Check for Numeric Columns in TidyTuesday Data — check_ttd_num_cols","text":"Checks datasets TidyTuesday data list numeric columns.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_num_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Numeric Columns in TidyTuesday Data — check_ttd_num_cols","text":"","code":"check_ttd_num_cols(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_num_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Numeric Columns in TidyTuesday Data — check_ttd_num_cols","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/check_ttd_num_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Numeric Columns in TidyTuesday Data — check_ttd_num_cols","text":"named list element contains column names numeric type, 0 numeric columns exist dataset","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/clean_title_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Title String — clean_title_string","title":"Clean Title String — clean_title_string","text":"Internal function performs actual string cleaning operations. function handles various types punctuation formatting issues commonly found dataset titles.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/clean_title_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Title String — clean_title_string","text":"","code":"clean_title_string(title)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/clean_title_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Title String — clean_title_string","text":"title Character string clean","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/clean_title_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Title String — clean_title_string","text":"Character string cleaned converted snake_case","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/clean_title_string.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean Title String — clean_title_string","text":"cleaning process follows steps: Remove replace problematic characters Normalize whitespace Convert snake_case Final cleanup underscores","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/convert_qmd_to_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Quarto syntax to R Markdown — convert_qmd_to_rmd","title":"Convert Quarto syntax to R Markdown — convert_qmd_to_rmd","text":"Convert Quarto syntax R Markdown","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/convert_qmd_to_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Quarto syntax to R Markdown — convert_qmd_to_rmd","text":"","code":"convert_qmd_to_rmd(qmd_lines)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_error_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Enhanced Error Report — create_error_report","title":"Create Enhanced Error Report — create_error_report","text":"Create Enhanced Error Report","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_error_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Enhanced Error Report — create_error_report","text":"","code":"create_error_report(   file,   error_msg,   dataset_title = \"Unknown\",   format = \"rmarkdown\" )"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_error_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Enhanced Error Report — create_error_report","text":"file Output file path error_msg Error message dataset_title Dataset title format Report format","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_qmd_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Fallback Quarto Template — create_fallback_qmd_template","title":"Create Fallback Quarto Template — create_fallback_qmd_template","text":"Create Fallback Quarto Template","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_qmd_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Fallback Quarto Template — create_fallback_qmd_template","text":"","code":"create_fallback_qmd_template()"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_rmd_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Fallback R Markdown Template — create_fallback_rmd_template","title":"Create Fallback R Markdown Template — create_fallback_rmd_template","text":"Create Fallback R Markdown Template","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_rmd_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Fallback R Markdown Template — create_fallback_rmd_template","text":"","code":"create_fallback_rmd_template()"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Fallback Template — create_fallback_template","title":"Create Fallback Template — create_fallback_template","text":"Create Fallback Template","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Fallback Template — create_fallback_template","text":"","code":"create_fallback_template(format = c(\"rmarkdown\", \"quarto\"))"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Fallback Template — create_fallback_template","text":"format Report format","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/create_fallback_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Fallback Template — create_fallback_template","text":"Path created template","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ctr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a colorized tree representation of an R object — ctr","title":"Print a colorized tree representation of an R object — ctr","text":"function displays compact, colored tree structure x using lobstr::tree() sensible defaults. Environments attributes hidden, scalar types collapsed, class names printed blue, values printed green. Newlines values removed keep output concise.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ctr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a colorized tree representation of an R object — ctr","text":"","code":"ctr(x = as.list(), depth = 10L, length = 50L)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ctr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a colorized tree representation of an R object — ctr","text":"x R object—typically list recursive structure—visualize. Defaults empty list created .list(). depth Integer scalar. Maximum depth recursion tree traversal. Defaults 10L. length Integer scalar. Maximum number elements show per node atomic vectors. Defaults 50L.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ctr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a colorized tree representation of an R object — ctr","text":"Invisibly returns original object x. main purpose function side effect printing tree.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ctr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a colorized tree representation of an R object — ctr","text":"","code":"# Basic usage on a nested list ctr(list(a = 1, b = list(c = 2, d = 3))) #> <list> #> ├─a: 1 #> └─b: <list> #>   ├─c: 2 #>   └─d: 3  # Limit depth to 2 levels ctr(list(a = 1, b = list(c = list(d = 4))), depth = 2) #> <list> #> ├─a: 1 #> └─b: <list> #>   └─c: <list> #>     └─d: 4  # Show only up to 5 elements for large atomic vectors ctr(as.list(1:100), length = 5) #> <list> #> ├─1 #> ├─2 #> ├─3 #> ├─4 #> ..."},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_dataset_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Clean Dataset Title — extract_dataset_title","title":"Extract and Clean Dataset Title — extract_dataset_title","text":"extract_dataset_title() takes dataset title returns cleaned version suitable use filename identifier. handles various punctuation marks, special characters, formatting create consistent snake_case output.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_dataset_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Clean Dataset Title — extract_dataset_title","text":"","code":"extract_dataset_title(dataset_title)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_dataset_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Clean Dataset Title — extract_dataset_title","text":"dataset_title Character string original dataset title","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_dataset_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Clean Dataset Title — extract_dataset_title","text":"Character string cleaned title snake_case format","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_dataset_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract and Clean Dataset Title — extract_dataset_title","text":"function performs following cleaning operations: Removes quotes (single double) Removes apostrophes converts contractions (e.g., \"D'oh\" becomes \"Doh\") Removes punctuation marks (commas, periods, exclamation marks, etc.) Removes parentheses brackets Removes dashes converts underscores Converts lowercase Replaces multiple spaces single spaces Converts snake_case format Removes multiple consecutive underscores","code":""},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_dataset_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Clean Dataset Title — extract_dataset_title","text":"","code":"extract_dataset_title(\"Bring your own data from 2024!\") #> SUCCESS [2025-07-16 14:17:30] Dataset title found in metadata! Bring your own data from 2024! #> [1] \"bring_your_own_data_from_2024\" # Returns: \"bring_your_own_data_from_2024\"  extract_dataset_title(\"Donuts, Data, and D'oh - A Deep Dive into The Simpsons\") #> SUCCESS [2025-07-16 14:17:30] Dataset title found in metadata! Donuts, Data, and D'oh - A Deep Dive into The Simpsons #> [1] \"donuts_data_and_doh_a_deep_dive_into_the_simpsons\" # Returns: \"donuts_data_and_doh_a_deep_dive_into_the_simpsons\"  extract_dataset_title(\"Moore's Law\") #> SUCCESS [2025-07-16 14:17:30] Dataset title found in metadata! Moore's Law #> [1] \"moores_law\"  extract_dataset_title(\"U.S. Wind Turbines (2018-2022)\") #> SUCCESS [2025-07-16 14:17:31] Dataset title found in metadata! U.S. Wind Turbines (2018-2022) #> [1] \"u_s_wind_turbines_2018_2022\""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_file_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract file names from TidyTuesday data object — extract_file_names","title":"Extract file names from TidyTuesday data object — extract_file_names","text":"Extract file names TidyTuesday data object","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_file_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract file names from TidyTuesday data object — extract_file_names","text":"","code":"extract_file_names(tt_data)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_file_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract file names from TidyTuesday data object — extract_file_names","text":"tt_data list TidyTuesday data load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_file_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract file names from TidyTuesday data object — extract_file_names","text":"Character vector file names extensions included","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/extract_file_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract file names from TidyTuesday data object — extract_file_names","text":"","code":"ttd <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:17:31] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:17:31] Successfully loaded cpu.csv #> INFO [2025-07-16 14:17:31] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:17:31] Successfully loaded gpu.csv #> INFO [2025-07-16 14:17:31] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:17:31] Successfully loaded ram.csv extract_file_names(ttd) #> [1] \"cpu.csv\" \"gpu.csv\" \"ram.csv\""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_intersecting_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Intersecting Column Names Between Two Datasets — get_intersecting_cols","title":"Get Intersecting Column Names Between Two Datasets — get_intersecting_cols","text":"Helper function find column names exist datasets exactly two datasets TidyTuesday data list.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_intersecting_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Intersecting Column Names Between Two Datasets — get_intersecting_cols","text":"","code":"get_intersecting_cols(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_intersecting_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Intersecting Column Names Between Two Datasets — get_intersecting_cols","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_intersecting_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Intersecting Column Names Between Two Datasets — get_intersecting_cols","text":"character vector intersecting column names, empty vector intersections exactly 2 datasets","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_intersecting_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Intersecting Column Names Between Two Datasets — get_intersecting_cols","text":"","code":"ttd <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:17:31] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:17:31] Successfully loaded cpu.csv #> INFO [2025-07-16 14:17:31] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:17:31] Successfully loaded gpu.csv #> INFO [2025-07-16 14:17:31] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:17:31] Successfully loaded ram.csv get_intersecting_cols(ttd) #> character(0)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_template_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Template Path for Format — get_template_path","title":"Get Template Path for Format — get_template_path","text":"Get Template Path Format","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_template_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Template Path for Format — get_template_path","text":"","code":"get_template_path(format)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_template_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Template Path for Format — get_template_path","text":"format Report format (\"rmarkdown\" \"quarto\")","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_template_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Template Path for Format — get_template_path","text":"Path template file","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_tt_title_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset Metadata — get_tt_title_meta","title":"Get Dataset Metadata — get_tt_title_meta","text":"Analyzes column types across datasets TidyTuesday data list returns tibble column type information.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_tt_title_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset Metadata — get_tt_title_meta","text":"","code":"get_tt_title_meta(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_tt_title_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset Metadata — get_tt_title_meta","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_tt_title_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dataset Metadata — get_tt_title_meta","text":"tibble four columns: clean_title: Clean title data col_type: Type column (numeric, logical, character, list) dataset: Name dataset col: Column name (NA columns type exist)","code":""},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/get_tt_title_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Dataset Metadata — get_tt_title_meta","text":"","code":"ttd <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:17:32] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded cpu.csv #> INFO [2025-07-16 14:17:32] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded gpu.csv #> INFO [2025-07-16 14:17:32] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded ram.csv meta <- get_tt_title_meta(ttd) #> INFO [2025-07-16 14:17:32] Datasets in list: cpu.csv, gpu.csv, ram.csv #> INFO [2025-07-16 14:17:32] Created metadata tibble with 30 rows covering 3 datasets print(meta) #> # A tibble: 30 × 4 #>    clean_title dataset col                  col_type  #>    <chr>       <chr>   <chr>                <chr>     #>  1 moores_law  cpu.csv transistor_count     numeric   #>  2 moores_law  cpu.csv date_of_introduction numeric   #>  3 moores_law  cpu.csv process              numeric   #>  4 moores_law  cpu.csv area                 numeric   #>  5 moores_law  cpu.csv NA                   logical   #>  6 moores_law  cpu.csv processor            character #>  7 moores_law  cpu.csv designer             character #>  8 moores_law  cpu.csv NA                   list      #>  9 moores_law  gpu.csv transistor_count     numeric   #> 10 moores_law  gpu.csv date_of_introduction numeric   #> # ℹ 20 more rows"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/has_min_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Dataset Has Minimum Required Columns — has_min_cols","title":"Check if Dataset Has Minimum Required Columns — has_min_cols","text":"Helper function determine specific dataset sufficient columns given type analysis.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/has_min_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Dataset Has Minimum Required Columns — has_min_cols","text":"","code":"has_min_cols(col_list, dataset_idx, min_count = 1)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/has_min_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Dataset Has Minimum Required Columns — has_min_cols","text":"col_list named list column vectors (output check_col_types()) dataset_idx Integer index dataset check min_count Minimum number columns required (default: 1)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/has_min_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Dataset Has Minimum Required Columns — has_min_cols","text":"Logical indicating whether dataset sufficient columns","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/has_min_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Dataset Has Minimum Required Columns — has_min_cols","text":"","code":"ttd <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:17:32] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded cpu.csv #> INFO [2025-07-16 14:17:32] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded gpu.csv #> INFO [2025-07-16 14:17:32] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded ram.csv num_cols <- check_col_types(ttd, \"num\") has_min_cols(num_cols, 1, min_count = 2) #> [1] TRUE"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/inspect_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect and Plot TidyTuesday Data — inspect_plot","title":"Inspect and Plot TidyTuesday Data — inspect_plot","text":"comprehensive function analyzes TidyTuesday datasets generates appropriate inspection plots based data characteristics number datasets.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/inspect_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect and Plot TidyTuesday Data — inspect_plot","text":"","code":"inspect_plot(ttd, plots = \"all\")"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/inspect_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect and Plot TidyTuesday Data — inspect_plot","text":"ttd list data frames load_tt_data() plot Character vector specifying plots generate. Options include: \"types\" - Column type distributions \"mem\" - Memory usage analysis \"na\" - Missing value analysis \"cor\" - Correlation analysis (numeric columns) \"imb\" - Feature imbalance (categorical columns) \"num\" - Numeric column summaries \"cat\" - Categorical column summaries \"\" - Generate available plots (default)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/inspect_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect and Plot TidyTuesday Data — inspect_plot","text":"Plots displayed; function called side effects","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/inspect_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect and Plot TidyTuesday Data — inspect_plot","text":"","code":"ttd <- load_tt_data(\"Moore’s Law\") #> INFO [2025-07-16 14:17:32] Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded cpu.csv #> INFO [2025-07-16 14:17:32] Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded gpu.csv #> INFO [2025-07-16 14:17:32] Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv #> SUCCESS [2025-07-16 14:17:32] Successfully loaded ram.csv  # Generate all plots inspect_plot(ttd) #> INFO [2025-07-16 14:17:32] inspect_plot(): starting analysis #> INFO [2025-07-16 14:17:32] Beginning plot type 'types'    #> SUCCESS [2025-07-16 14:17:33] Completed plot type 'types' #> INFO [2025-07-16 14:17:33] Beginning plot type 'mem'    #> SUCCESS [2025-07-16 14:17:33] Completed plot type 'mem' #> INFO [2025-07-16 14:17:33] Beginning plot type 'na'    #> SUCCESS [2025-07-16 14:17:34] Completed plot type 'na' #> INFO [2025-07-16 14:17:34] Beginning plot type 'cor'    #> SUCCESS [2025-07-16 14:17:34] Completed plot type 'cor' #> INFO [2025-07-16 14:17:34] Beginning plot type 'imb'    #> SUCCESS [2025-07-16 14:17:35] Completed plot type 'imb' #> INFO [2025-07-16 14:17:35] Beginning plot type 'num'    #> SUCCESS [2025-07-16 14:17:36] Completed plot type 'num' #> INFO [2025-07-16 14:17:36] Beginning plot type 'cat'    #> SUCCESS [2025-07-16 14:17:36] Completed plot type 'cat' #> SUCCESS [2025-07-16 14:17:36] inspect_plot(): all requested plots finished #> NULL  # Generate only specific plots inspect_plot(ttd, plot = c(\"types\", \"mem\")) #> INFO [2025-07-16 14:17:36] inspect_plot(): starting analysis #> INFO [2025-07-16 14:17:36] Beginning plot type 'types'    #> SUCCESS [2025-07-16 14:17:37] Completed plot type 'types' #> INFO [2025-07-16 14:17:37] Beginning plot type 'mem'    #> SUCCESS [2025-07-16 14:17:37] Completed plot type 'mem' #> SUCCESS [2025-07-16 14:17:37] inspect_plot(): all requested plots finished #> NULL  # Generate single plot type inspect_plot(ttd, plot = \"cor\") #> INFO [2025-07-16 14:17:37] inspect_plot(): starting analysis #> INFO [2025-07-16 14:17:37] Beginning plot type 'cor'    #> SUCCESS [2025-07-16 14:17:37] Completed plot type 'cor' #> SUCCESS [2025-07-16 14:17:37] inspect_plot(): all requested plots finished #> NULL"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/launch.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Tidy Tuesday Explorer App — launch","title":"Launch the Tidy Tuesday Explorer App — launch","text":"function launches Shiny application exploring Tidy Tuesday datasets.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/launch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Tidy Tuesday Explorer App — launch","text":"","code":"launch(..., log_file = NULL, json = FALSE)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/launch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the Tidy Tuesday Explorer App — launch","text":"... Additional arguments passed shinyApp() log_file Optional path log file application logs json Logical, whether use JSON logging format","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/launch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the Tidy Tuesday Explorer App — launch","text":"Shiny app object","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load TidyTuesday datasets from GitHub by title — load_tt_data","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"Filters internal dataset all_tt_combined title, loads associated data files using appropriate methods depending data_type. Supports functional error handling logging.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"","code":"load_tt_data(title)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"title character string matching title field all_tt_combined.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"named list tibbles data frames (one per file). Failed skipped datasets excluded.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":"features","dir":"Reference","previous_headings":"","what":"Features","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"Automatically selects correct reader (csv, tsv, xlsx, rds) Logs messages using logr_msg() Adds clean_title attribute dataset Skips unsupported formats (vgz, zip, NA)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":"supported-file-types","dir":"Reference","previous_headings":"","what":"Supported file types","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"\"csv\" / \"csv.gz\" → vroom::vroom() \"tsv\"              → vroom::vroom() \"xlsx\"             → readxl::read_excel() \"rds\"              → readRDS() URL connection","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":"unsupported","dir":"Reference","previous_headings":"","what":"Unsupported","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"\"vgz\", \"zip\", NA → skipped error logging","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/load_tt_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load TidyTuesday datasets from GitHub by title — load_tt_data","text":"","code":"load_tt_data(\"posit::conf talks\") #> INFO [2025-07-16 14:17:40] Starting import for conf2023.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2025/2025-01-14/conf2023.csv #> SUCCESS [2025-07-16 14:17:41] Successfully loaded conf2023.csv #> INFO [2025-07-16 14:17:41] Starting import for conf2024.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2025/2025-01-14/conf2024.csv #> SUCCESS [2025-07-16 14:17:41] Successfully loaded conf2024.csv #> $conf2023.csv #> # A tibble: 116 × 9 #>    speaker_name speaker_affiliation session_type session_title block_track_title #>    <chr>        <chr>               <chr>        <chr>         <chr>             #>  1 Elaine McVey Chief               keynote      From Data Co… From Data Confus… #>  2 David Meza   NASA                keynote      From Data Co… From Data Confus… #>  3 Daniel Wood… Eli Lilly & Company regular      Developing a… Building effecti… #>  4 Liz Roten    Metropolitan Counc… regular      How to grace… Building effecti… #>  5 Andrew Holz  Posit               regular      Oops I'm a m… Building effecti… #>  6 Patrick Ten… Meadows Mental Hea… regular      The Gonzalez… Building effecti… #>  7 Natalia And… Pfizer              regular      Building a C… Pharma            #>  8 Mike K Smith Pfizer R&D UK Ltd   regular      Open-source … Pharma            #>  9 Ben Arancib… GSK                 regular      The Need for… Pharma            #> 10 Colby T. Fo… Tuple, LLC / Amiss… regular      Succeed in t… Pharma            #> # ℹ 106 more rows #> # ℹ 4 more variables: session_date <date>, session_start <dttm>, #> #   session_length <dbl>, session_abstract <chr> #>  #> $conf2024.csv #> # A tibble: 106 × 5 #>    talk_title                              speaker_name track description yt_url #>    <chr>                                   <chr>        <chr> <chr>       <chr>  #>  1 A future of data science                Allen Downey Keyn… \"In the hy… https… #>  2 Beyond Dashboards: Dynamic Data Storyt… Sean Nguyen  Auto… \"In this t… https… #>  3 Quarto, AI, and the Art of Getting You… Tyler Morga… Auto… \"Tired of … https… #>  4 Creating reproducible static reports    Orla Doyle   Auto… \"This talk… https… #>  5 Quarto: A Multifaceted Publishing Powe… Joshua Cook  Auto… \"Tradition… https… #>  6 Adequate Tables? No, We Want Great Tab… Richard Ian… Beau… \"Tables ar… https… #>  7 Context is King                         Shannon Pil… Beau… \"The quali… https… #>  8 gtsummary: Streamlining Summary Tables… Daniel Sjob… Beau… \"The gtsum… https… #>  9 Stitch by Stitch: The Art of Engaging … Becca Krouse Beau… \"In the wo… https… #> 10 Open Source Software in Action: Expand… Gabriel Mor… Data… \"The Urban… https… #> # ℹ 96 more rows #>"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/logr_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Messages to Console and File with Optional JSON Format — logr_msg","title":"Log Messages to Console and File with Optional JSON Format — logr_msg","text":"utility function logging messages console (optionally) log file. Messages can stored plain text (default) JSON format.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/logr_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Messages to Console and File with Optional JSON Format — logr_msg","text":"","code":"logr_msg(message, level = \"INFO\", log_file = NULL, json = FALSE)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/logr_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Messages to Console and File with Optional JSON Format — logr_msg","text":"message character string representing message logged. level character string indicating log level. One : \"FATAL\" \"ERROR\" \"WARN\" \"SUCCESS\" \"INFO\" (default) \"DEBUG\" \"TRACE\" log_file character string specifying path log file. NULL, logs saved file, console logging performed. Defaults NULL. json logical value indicating whether save logs JSON format. Defaults FALSE. TRUE, logs written specified log_file JSON objects.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/logr_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Messages to Console and File with Optional JSON Format — logr_msg","text":"function called side effects logging messages return value.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/logr_msg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Messages to Console and File with Optional JSON Format — logr_msg","text":"Console Logging: messages always logged console. File Logging: log_file specified, messages logged file either plain text JSON format, depending value json. JSON Logs: json = TRUE, log messages stored structured JSON objects fields: timestamp: time message logged. level: severity level log. message: actual log message.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/logr_msg.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Log Messages to Console and File with Optional JSON Format — logr_msg","text":"logr_msg() uses logger package console plain text logging integrates JSON logging using jsonlite package.","code":""},{"path":[]},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/logr_msg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Messages to Console and File with Optional JSON Format — logr_msg","text":"","code":"# log a simple informational message to the console logr_msg(\"Application started.\") #> INFO [2025-07-16 14:17:42] Application started.  # log an error message to the console and a file in plain text format logr_msg(   message = \"Failed to connect to the database.\",   level = \"ERROR\",   log_file = \"error_log.txt\" ) #> ERROR [2025-07-16 14:17:42] Failed to connect to the database.  # log a success message in JSON format logr_msg(   message = \"User login successful.\",   level = \"SUCCESS\",   log_file = \"app_log.json\",   json = TRUE ) #> SUCCESS [2025-07-16 14:17:42] User login successful.  # log a warning message to the console only logr_msg(   message = \"Low memory warning.\",   level = \"WARN\" ) #> {\"time\":\"2025-07-16 14:17:42\",\"level\":\"WARN\",\"ns\":\"ttdviewer\",\"ans\":\"global\",\"topenv\":\"ttdviewer\",\"fn\":\"logr_msg\",\"node\":\"pkrvmq0rgcvqdmg\",\"arch\":\"x86_64\",\"os_name\":\"Linux\",\"os_release\":\"6.11.0-1018-azure\",\"os_version\":\"#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025\",\"pid\":7573,\"user\":\"runner\",\"msg\":\"Low memory warning.\"}"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Input Server Module — mod_input_server","title":"Variable Input Server Module — mod_input_server","text":"Variable Input Server Module","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Input Server Module — mod_input_server","text":"","code":"mod_input_server(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Input Server Module — mod_input_server","text":"id Module ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Input Server Module — mod_input_server","text":"list reactive data load_tt_data() dataset title.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Input UI Module — mod_input_ui","title":"Variable Input UI Module — mod_input_ui","text":"Variable Input UI Module","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Input UI Module — mod_input_ui","text":"","code":"mod_input_ui(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Input UI Module — mod_input_ui","text":"id Namespace ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_input_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Input UI Module — mod_input_ui","text":"UI elements dataset title selection","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_list_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Table Server Module (listviewerlite) — mod_list_server","title":"Table Server Module (listviewerlite) — mod_list_server","text":"Table Server Module (listviewerlite)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_list_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table Server Module (listviewerlite) — mod_list_server","text":"","code":"mod_list_server(id, data)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_list_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table Server Module (listviewerlite) — mod_list_server","text":"id Module ID data reactive expression returning dataset list","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_list_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"List UI Module (listviewerlite) — mod_list_ui","title":"List UI Module (listviewerlite) — mod_list_ui","text":"List UI Module (listviewerlite)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_list_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List UI Module (listviewerlite) — mod_list_ui","text":"","code":"mod_list_ui(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_list_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List UI Module (listviewerlite) — mod_list_ui","text":"id Namespace ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_list_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List UI Module (listviewerlite) — mod_list_ui","text":"UI element list output using listviewerlite","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_plot_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect Plot Module Server — mod_plot_server","title":"Inspect Plot Module Server — mod_plot_server","text":"Renders one plot per (dataset × plot-type)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_plot_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect Plot Module Server — mod_plot_server","text":"","code":"mod_plot_server(id, ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_plot_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect Plot Module Server — mod_plot_server","text":"id Module id ttd Reactive static named list data.frames","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_plot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect Plot Module UI — mod_plot_ui","title":"Inspect Plot Module UI — mod_plot_ui","text":"Let user pick plots see one panel per dataset × plot","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_plot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect Plot Module UI — mod_plot_ui","text":"","code":"mod_plot_ui(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_plot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect Plot Module UI — mod_plot_ui","text":"id Module id","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_plot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect Plot Module UI — mod_plot_ui","text":"Shiny UI","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_desc_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Description Format Server Module — mod_report_desc_server","title":"Report Description Format Server Module — mod_report_desc_server","text":"Report Description Format Server Module","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_desc_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Description Format Server Module — mod_report_desc_server","text":"","code":"mod_report_desc_server(id, format)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_desc_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Description Format Server Module — mod_report_desc_server","text":"id Module ID format reactive expression returning report format","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_desc_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Description UI Module with Format Selection — mod_report_desc_ui","title":"Report Description UI Module with Format Selection — mod_report_desc_ui","text":"Report Description UI Module Format Selection","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_desc_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Description UI Module with Format Selection — mod_report_desc_ui","text":"","code":"mod_report_desc_ui(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_desc_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Description UI Module with Format Selection — mod_report_desc_ui","text":"id Namespace ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_desc_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Description UI Module with Format Selection — mod_report_desc_ui","text":"UI elements report format descriptions","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_download_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Download Server Module with Enhanced Quarto Error Handling — mod_report_download_server","title":"Report Download Server Module with Enhanced Quarto Error Handling — mod_report_download_server","text":"Report Download Server Module Enhanced Quarto Error Handling","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_download_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Download Server Module with Enhanced Quarto Error Handling — mod_report_download_server","text":"","code":"mod_report_download_server(id, format, data, dataset_title, selected_plot_type)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_download_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Download Server Module with Enhanced Quarto Error Handling — mod_report_download_server","text":"id Module ID format reactive expression returning report format data reactive expression returning dataset list dataset_title reactive expression returning dataset title selected_plot_type reactive expression returning selected plot type","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_download_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Download UI Module with Format Selection — mod_report_download_ui","title":"Report Download UI Module with Format Selection — mod_report_download_ui","text":"Report Download UI Module Format Selection","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_download_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Download UI Module with Format Selection — mod_report_download_ui","text":"","code":"mod_report_download_ui(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_download_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Download UI Module with Format Selection — mod_report_download_ui","text":"id Namespace ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_download_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Download UI Module with Format Selection — mod_report_download_ui","text":"UI elements report generation format options","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_input_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Input Server Module — mod_report_input_server","title":"Report Input Server Module — mod_report_input_server","text":"Report Input Server Module","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_input_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Input Server Module — mod_report_input_server","text":"","code":"mod_report_input_server(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_input_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Input Server Module — mod_report_input_server","text":"id Module ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_input_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Input UI Module with Format Selection — mod_report_input_ui","title":"Report Input UI Module with Format Selection — mod_report_input_ui","text":"Report Input UI Module Format Selection","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_input_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Input UI Module with Format Selection — mod_report_input_ui","text":"","code":"mod_report_input_ui(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_input_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Input UI Module with Format Selection — mod_report_input_ui","text":"id Namespace ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_report_input_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Input UI Module with Format Selection — mod_report_input_ui","text":"UI elements report format input","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_table_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Table Server Module (reactable) — mod_table_server","title":"Table Server Module (reactable) — mod_table_server","text":"Table Server Module (reactable)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_table_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table Server Module (reactable) — mod_table_server","text":"","code":"mod_table_server(id, data)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_table_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table Server Module (reactable) — mod_table_server","text":"id Module ID data reactive expression returning dataset list","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_table_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Table UI Module (reactable) — mod_table_ui","title":"Table UI Module (reactable) — mod_table_ui","text":"Table UI Module (reactable)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_table_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table UI Module (reactable) — mod_table_ui","text":"","code":"mod_table_ui(id)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_table_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table UI Module (reactable) — mod_table_ui","text":"id Namespace ID","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/mod_table_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table UI Module (reactable) — mod_table_ui","text":"UI element data table output using reactable","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/quarto_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarto availability check — quarto_available","title":"Quarto availability check — quarto_available","text":"Quarto availability check","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/quarto_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarto availability check — quarto_available","text":"","code":"quarto_available()"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/quarto_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quarto availability check — quarto_available","text":"Logical indicating Quarto available","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_alternative.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative Quarto Rendering using rmarkdown — render_quarto_alternative","title":"Alternative Quarto Rendering using rmarkdown — render_quarto_alternative","text":"Alternative Quarto Rendering using rmarkdown","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_alternative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative Quarto Rendering using rmarkdown — render_quarto_alternative","text":"","code":"render_quarto_alternative(template_path, output_file, params)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Quarto Report with Enhanced Error Handling — render_quarto_report","title":"Render Quarto Report with Enhanced Error Handling — render_quarto_report","text":"Render Quarto Report Enhanced Error Handling","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Quarto Report with Enhanced Error Handling — render_quarto_report","text":"","code":"render_quarto_report(template_path, output_file, params)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Quarto Report with Enhanced Error Handling — render_quarto_report","text":"template_path Path qmd template output_file Output file path params Report parameters","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_system_call.html","id":null,"dir":"Reference","previous_headings":"","what":"System call method for Quarto rendering — render_quarto_system_call","title":"System call method for Quarto rendering — render_quarto_system_call","text":"System call method Quarto rendering","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_system_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"System call method for Quarto rendering — render_quarto_system_call","text":"","code":"render_quarto_system_call(template_path, output_file, params)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_quarto_system_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"System call method for Quarto rendering — render_quarto_system_call","text":"template_path path template output_file report output","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Report Based on Format Type — render_report","title":"Render Report Based on Format Type — render_report","text":"utility function renders either R Markdown Quarto reports based specified format.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Report Based on Format Type — render_report","text":"","code":"render_report(   format = c(\"rmarkdown\", \"quarto\"),   output_file,   params = list(),   template_path = NULL )"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Report Based on Format Type — render_report","text":"format Character string: \"rmarkdown\" \"quarto\" output_file Path output file params List parameters pass report template_path Optional custom template path","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Report Based on Format Type — render_report","text":"Path rendered file","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_rmarkdown_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render R Markdown Report — render_rmarkdown_report","title":"Render R Markdown Report — render_rmarkdown_report","text":"Render R Markdown Report","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_rmarkdown_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render R Markdown Report — render_rmarkdown_report","text":"","code":"render_rmarkdown_report(template_path, output_file, params)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/render_rmarkdown_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render R Markdown Report — render_rmarkdown_report","text":"template_path Path Rmd template output_file Output file path params Report parameters","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Test logger (test utility) — test_logger","title":"Test logger (test utility) — test_logger","text":"Test logger (test utility)","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test logger (test utility) — test_logger","text":"","code":"test_logger(start = NULL, end = NULL, msg)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test logger (test utility) — test_logger","text":"start test start message end test end message msg test message","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test logger (test utility) — test_logger","text":"message test output","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_title_cleaning.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Dataset Title Cleaning — test_title_cleaning","title":"Test Dataset Title Cleaning — test_title_cleaning","text":"utility function test title cleaning functionality various edge cases examples.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_title_cleaning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Dataset Title Cleaning — test_title_cleaning","text":"","code":"test_title_cleaning()"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_title_cleaning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Dataset Title Cleaning — test_title_cleaning","text":"data frame showing original titles cleaned versions","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/test_title_cleaning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Dataset Title Cleaning — test_title_cleaning","text":"","code":"test_title_cleaning() #>                                                  Original #> 1                          Bring your own data from 2024! #> 2  Donuts, Data, and D'oh - A Deep Dive into The Simpsons #> 3                                             Moore's Law #> 4                          U.S. Wind Turbines (2018-2022) #> 5                       It's Always Sunny in Philadelphia #> 6                         Bob's Burgers & Restaurant Data #> 7                         COVID-19: The Pandemic's Impact #> 8                           Taylor Swift's Albums & Songs #> 9                                   NASA's Space Missions #> 10                                 Women's World Cup 2023 #> 11                        Pride & Prejudice Text Analysis #> 12                        R-Ladies: Global Chapter Events #> 13                         Lorem Ipsum... Text Generator! #> 14                                    Data Science @ Work #> 15                                    AI/ML in Healthcare #> 16                            50% Off: Black Friday Sales #> 17                                 #TidyTuesday Community #> 18                           Star Wars: The Force Awakens #> 19                   Climate Change – Global Temperatures #> 20                                   NYC Taxi & Uber Data #>                                              Cleaned #> 1                      bring_your_own_data_from_2024 #> 2  donuts_data_and_doh_a_deep_dive_into_the_simpsons #> 3                                         moores_law #> 4                        u_s_wind_turbines_2018_2022 #> 5                   its_always_sunny_in_philadelphia #> 6                       bobs_burgers_restaurant_data #> 7                      covid_19_the_pandemics_impact #> 8                         taylor_swifts_albums_songs #> 9                              nas_as_space_missions #> 10                             womens_world_cup_2023 #> 11                     pride_prejudice_text_analysis #> 12                    r_ladies_global_chapter_events #> 13                        lorem_ipsum_text_generator #> 14                                 data_science_work #> 15                               ai_ml_in_healthcare #> 16                 dataset_50_off_black_friday_sales #> 17                            tidy_tuesday_community #> 18                       star_wars_the_force_awakens #> 19                climate_change_global_temperatures #> 20                                nyc_taxi_uber_data"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/tstmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Timestamp — tstmp","title":"Timestamp — tstmp","text":"Timestamp","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/tstmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timestamp — tstmp","text":"","code":"tstmp()"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/tstmp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Timestamp — tstmp","text":"character string date/time.","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/tstmp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Timestamp — tstmp","text":"","code":"tstmp() #> [1] \"2025-07-16-14.17.45\" cat(paste(\"Last updated:\", tstmp())) #> Last updated: 2025-07-16-14.17.45"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ttd_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine length of TidyTuesday Data — ttd_length","title":"Determine length of TidyTuesday Data — ttd_length","text":"Determine length TidyTuesday Data","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ttd_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine length of TidyTuesday Data — ttd_length","text":"","code":"ttd_length(ttd)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ttd_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine length of TidyTuesday Data — ttd_length","text":"ttd list data frames load_tt_data()","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ttd_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine length of TidyTuesday Data — ttd_length","text":"integer length ttd","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/ttd_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine length of TidyTuesday Data — ttd_length","text":"","code":"ttd <- load_tt_data(\"Moore’s Law\") #> {\"time\":\"2025-07-16 14:17:45\",\"level\":\"INFO\",\"ns\":\"ttdviewer\",\"ans\":\"global\",\"topenv\":\"ttdviewer\",\"fn\":\"logr_msg\",\"node\":\"pkrvmq0rgcvqdmg\",\"arch\":\"x86_64\",\"os_name\":\"Linux\",\"os_release\":\"6.11.0-1018-azure\",\"os_version\":\"#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025\",\"pid\":7573,\"user\":\"runner\",\"msg\":\"Starting import for cpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/cpu.csv\"} #> {\"time\":\"2025-07-16 14:17:45\",\"level\":\"SUCCESS\",\"ns\":\"ttdviewer\",\"ans\":\"global\",\"topenv\":\"ttdviewer\",\"fn\":\"logr_msg\",\"node\":\"pkrvmq0rgcvqdmg\",\"arch\":\"x86_64\",\"os_name\":\"Linux\",\"os_release\":\"6.11.0-1018-azure\",\"os_version\":\"#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025\",\"pid\":7573,\"user\":\"runner\",\"msg\":\"Successfully loaded cpu.csv\"} #> {\"time\":\"2025-07-16 14:17:45\",\"level\":\"INFO\",\"ns\":\"ttdviewer\",\"ans\":\"global\",\"topenv\":\"ttdviewer\",\"fn\":\"logr_msg\",\"node\":\"pkrvmq0rgcvqdmg\",\"arch\":\"x86_64\",\"os_name\":\"Linux\",\"os_release\":\"6.11.0-1018-azure\",\"os_version\":\"#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025\",\"pid\":7573,\"user\":\"runner\",\"msg\":\"Starting import for gpu.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/gpu.csv\"} #> {\"time\":\"2025-07-16 14:17:45\",\"level\":\"SUCCESS\",\"ns\":\"ttdviewer\",\"ans\":\"global\",\"topenv\":\"ttdviewer\",\"fn\":\"logr_msg\",\"node\":\"pkrvmq0rgcvqdmg\",\"arch\":\"x86_64\",\"os_name\":\"Linux\",\"os_release\":\"6.11.0-1018-azure\",\"os_version\":\"#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025\",\"pid\":7573,\"user\":\"runner\",\"msg\":\"Successfully loaded gpu.csv\"} #> {\"time\":\"2025-07-16 14:17:45\",\"level\":\"INFO\",\"ns\":\"ttdviewer\",\"ans\":\"global\",\"topenv\":\"ttdviewer\",\"fn\":\"logr_msg\",\"node\":\"pkrvmq0rgcvqdmg\",\"arch\":\"x86_64\",\"os_name\":\"Linux\",\"os_release\":\"6.11.0-1018-azure\",\"os_version\":\"#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025\",\"pid\":7573,\"user\":\"runner\",\"msg\":\"Starting import for ram.csv from https://raw.githubusercontent.com/rfordatascience/tidytuesday/refs/heads/main/data/2019/2019-09-03/ram.csv\"} #> {\"time\":\"2025-07-16 14:17:45\",\"level\":\"SUCCESS\",\"ns\":\"ttdviewer\",\"ans\":\"global\",\"topenv\":\"ttdviewer\",\"fn\":\"logr_msg\",\"node\":\"pkrvmq0rgcvqdmg\",\"arch\":\"x86_64\",\"os_name\":\"Linux\",\"os_release\":\"6.11.0-1018-azure\",\"os_version\":\"#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025\",\"pid\":7573,\"user\":\"runner\",\"msg\":\"Successfully loaded ram.csv\"} ttd_length(ttd) #> [1] 3"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_and_clean_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and Clean Report Parameters — validate_and_clean_params","title":"Validate and Clean Report Parameters — validate_and_clean_params","text":"Validate Clean Report Parameters","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_and_clean_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and Clean Report Parameters — validate_and_clean_params","text":"","code":"validate_and_clean_params(params)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_and_clean_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and Clean Report Parameters — validate_and_clean_params","text":"params List parameters","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_and_clean_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and Clean Report Parameters — validate_and_clean_params","text":"Cleaned validated parameter list","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_quarto_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Quarto Parameters — validate_quarto_params","title":"Validate Quarto Parameters — validate_quarto_params","text":"Validate Quarto Parameters","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_quarto_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Quarto Parameters — validate_quarto_params","text":"","code":"validate_quarto_params(params)"},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_quarto_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Quarto Parameters — validate_quarto_params","text":"params Parameter list","code":""},{"path":"https://mjfrigaard.github.io/ttdviewer/reference/validate_quarto_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Quarto Parameters — validate_quarto_params","text":"Validated parameter list","code":""}]
